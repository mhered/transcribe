1
00:00:00,000 --> 00:00:05,000
Bueno, aquí estamos.

2
00:00:05,000 --> 00:00:10,000
Vamos a echarla sin parar.

3
00:00:10,000 --> 00:00:13,000
Continuamos, esto es un operador.

4
00:00:13,000 --> 00:00:18,000
Bueno, pues antes de presentar la siguiente charla quería recordarlos,

5
00:00:18,000 --> 00:00:20,000
bueno, lo que estamos poniendo abajo.

6
00:00:20,000 --> 00:00:24,000
Tenemos tres sorteos que han sido preparados desde la organización.

7
00:00:24,000 --> 00:00:27,000
Si tú tienes con el hashtag payconels2021 diciendo que os estás

8
00:00:27,000 --> 00:00:32,000
gustando de la payconels, también tenemos una encuesta de feedback

9
00:00:32,000 --> 00:00:37,000
para que comentéis que os gusta y que penséis que se deberían mejorar.

10
00:00:37,000 --> 00:00:41,000
Y también tenemos un cajut al final de la conferencia,

11
00:00:41,000 --> 00:00:42,000
en el cual podéis participar.

12
00:00:42,000 --> 00:00:45,000
Importante que si queréis optar a algunos premios,

13
00:00:45,000 --> 00:00:47,000
tenéis que estar en la ceremonia de clausura,

14
00:00:47,000 --> 00:00:49,000
que es cuando nos repartiremos.

15
00:00:49,000 --> 00:00:54,000
Y paralelamente a esto hay al menos dos,

16
00:00:54,000 --> 00:00:59,000
dos de estos patrocinadores, cursos de desarrollo y fotofilts.

17
00:00:59,000 --> 00:01:00,000
Fotofilts.

18
00:01:00,000 --> 00:01:01,000
Fotofilts.

19
00:01:01,000 --> 00:01:04,000
Que ha anunciado dos sorteos que están haciendo en sus canales,

20
00:01:04,000 --> 00:01:07,000
cursos de desarrollo son cursos de formación.

21
00:01:07,000 --> 00:01:13,000
Y fotofilts es suscripciones a su app con incluidas las funciones beta.

22
00:01:13,000 --> 00:01:17,000
En un caso os rellenan un formular y en otro caso tenéis que enviar una fotochura.

23
00:01:17,000 --> 00:01:18,000
Todo en Discord.

24
00:01:18,000 --> 00:01:19,000
Todo en Discord.

25
00:01:19,000 --> 00:01:20,000
Sí, está todo en Discord,

26
00:01:20,000 --> 00:01:22,000
los canales, los patrocinadores,

27
00:01:22,000 --> 00:01:25,000
podéis ver en qué consiste el concurso, ¿vale?

28
00:01:25,000 --> 00:01:29,000
Y si no me equivoco, creo que también estas,

29
00:01:29,000 --> 00:01:35,000
las personas ganadoras de estos concurso también se anunciarán en la ceremonia de clausura.

30
00:01:35,000 --> 00:01:36,000
¿Vale?

31
00:01:36,000 --> 00:01:38,000
A ver, ¿qué tal?

32
00:01:38,000 --> 00:01:42,000
Pues nada, pues pasamos ya a presentar la siguiente charla,

33
00:01:42,000 --> 00:01:46,000
que se titula Cutie for Python, Metal Edition.

34
00:01:46,000 --> 00:01:49,000
Yo estoy interesado por saber en qué,

35
00:01:49,000 --> 00:01:52,000
que parte, por qué es lo de Metal Edition,

36
00:01:52,000 --> 00:01:54,000
porque en la descripción no lo...

37
00:01:54,000 --> 00:01:55,000
En Metal Edition.

38
00:01:55,000 --> 00:01:56,000
...ha divertido.

39
00:01:56,000 --> 00:02:01,000
Y bueno, lo que no sé si conocéis Cutie o Cutie,

40
00:02:01,000 --> 00:02:07,000
según se dice, es una biblioteca para desarrollar interfaces

41
00:02:07,000 --> 00:02:10,000
en las aplicaciones de escritorio.

42
00:02:10,000 --> 00:02:12,000
Normalmente estamos en los números a que todas las aplicaciones web,

43
00:02:12,000 --> 00:02:14,000
pero no todos web.

44
00:02:14,000 --> 00:02:19,000
Hay también aplicaciones de escritorio,

45
00:02:19,000 --> 00:02:24,000
igual a Cutie es una de las herramientas que nos permite hacer en una...

46
00:02:24,000 --> 00:02:30,000
si dice, me dicen que si dice Cutie, perdón, no es Cutie, es Cutie.

47
00:02:30,000 --> 00:02:31,000
Es Cutie.

48
00:02:31,000 --> 00:02:32,000
Vale.

49
00:02:32,000 --> 00:02:33,000
Bueno, igual hay...

50
00:02:33,000 --> 00:02:34,000
Hay...

51
00:02:34,000 --> 00:02:35,000
Hay muchas maneras de decir una palabra en inglés,

52
00:02:35,000 --> 00:02:37,000
así que tampoco pasa nada.

53
00:02:37,000 --> 00:02:41,000
Si trabajas con Cutie, puedes hacer una herramienta está muy Cutie.

54
00:02:41,000 --> 00:02:44,000
Y por eso, bueno, nos van a enseñar a hacer una...

55
00:02:44,000 --> 00:02:46,000
una enseñada con función de esta biblioteca

56
00:02:46,000 --> 00:02:50,000
y nos van a enseñar haciéndolo programando un reproductor de vídeos de YouTube.

57
00:02:50,000 --> 00:02:53,000
O sea, juntamos la web con el escritorio.

58
00:02:53,000 --> 00:02:54,000
Superchulo.

59
00:02:54,000 --> 00:02:56,000
Y nos lo presenta Sergio.

60
00:02:56,000 --> 00:02:58,000
Nos lo presenta Antonio Ramírez Martí.

61
00:02:58,000 --> 00:03:02,000
Él viene ya de hace tiempo trabajando con todas estas cosas.

62
00:03:02,000 --> 00:03:06,000
De hecho, dio clases de CEMASMAS, Cutie 4, Cutie 5.

63
00:03:06,000 --> 00:03:10,000
Así que bueno, yo creo que ya este tema los tiene controlados.

64
00:03:10,000 --> 00:03:13,000
Luego pasó a desarrollar Python Angular.

65
00:03:13,000 --> 00:03:17,000
Y bueno, esperamos que...

66
00:03:17,000 --> 00:03:20,000
que tenga una buena charla, ¿no?

67
00:03:20,000 --> 00:03:22,000
Si quieres, le damos paso.

68
00:03:22,000 --> 00:03:23,000
Hola.

69
00:03:23,000 --> 00:03:24,000
Hola.

70
00:03:24,000 --> 00:03:25,000
¿Sus me escuchan?

71
00:03:25,000 --> 00:03:26,000
Sí, todo bien.

72
00:03:26,000 --> 00:03:28,000
Perfecto, perfecto, perfecto.

73
00:03:28,000 --> 00:03:30,000
Buenos días a todos.

74
00:03:30,000 --> 00:03:31,000
Vale.

75
00:03:31,000 --> 00:03:35,000
No me gustaría subir demasiado las expectativas con la charla ya que...

76
00:03:35,000 --> 00:03:42,000
En principio la idea es utilizarla como base para una serie de talleres que vamos a hacer en Python Granada.

77
00:03:42,000 --> 00:03:44,000
Aquí en la situación local.

78
00:03:44,000 --> 00:03:49,000
Para ir aprendiendo también a programar con Python.

79
00:03:49,000 --> 00:03:57,000
Estamos para este nuevo año pensando también en dar nuevas charlas acerca de no solamente de Cutie,

80
00:03:57,000 --> 00:04:01,000
de Cutie, que yo siempre le he dicho Cutie, lo siento.

81
00:04:01,000 --> 00:04:03,000
Sí, sí, sí. Yo también no te preocupo.

82
00:04:03,000 --> 00:04:05,000
No te siento raro.

83
00:04:05,000 --> 00:04:08,000
Sé que se dice Cutie, pero ya lo tengo muy asumido que digo Cutie.

84
00:04:08,000 --> 00:04:11,000
Y también cosas con MicroPython y demás.

85
00:04:11,000 --> 00:04:18,000
Entonces, en principio la idea de hacer la programación entera era con más tiempo,

86
00:04:18,000 --> 00:04:21,000
pero bueno, al final, pues como no se ha podido hacer con más tiempo,

87
00:04:21,000 --> 00:04:26,000
pues lo vamos a hacer un poco de prisa corriendo.

88
00:04:26,000 --> 00:04:30,000
Bueno, entonces, inicialmente y en el futuro ya...

89
00:04:30,000 --> 00:04:34,000
Vamos a ir ampliando.

90
00:04:34,000 --> 00:04:36,000
¿Pichamos su pantalla?

91
00:04:36,000 --> 00:04:39,000
Sí, entonces, ya la transparencia...

92
00:04:39,000 --> 00:04:42,000
Ahora ya sí, ahora ya sí, está volviendo.

93
00:04:42,000 --> 00:04:47,000
Pues tenemos aquí y eso tiene 20 minutillos, un poquito más si quieres y después preguntas,

94
00:04:47,000 --> 00:04:49,000
un poco de conversación, ¿vale?

95
00:04:49,000 --> 00:04:51,000
Muy bien, perfecto.

96
00:04:51,000 --> 00:04:53,000
Vamos adelante.

97
00:04:53,000 --> 00:04:55,000
Perfecto, empezamos.

98
00:04:55,000 --> 00:05:01,000
Entonces, lo primero de todo, hola a todos, yo soy anteriormente, ya me han presentado.

99
00:05:01,000 --> 00:05:04,000
Me ganó la vida haciendo desarrollo de servicios en Python,

100
00:05:04,000 --> 00:05:07,000
una empresa de eficiencia energética de ingeniería.

101
00:05:07,000 --> 00:05:13,000
Y hoy vamos a ver un poco cómo hacer el desarrollo de un pequeño reproductor de vídeo.

102
00:05:13,000 --> 00:05:16,000
De acuerdo tenéis el enlace de GitHub arriba,

103
00:05:16,000 --> 00:05:20,000
de acuerdo de tenéis el código por si queréis echarle un vistazo mientras estamos dando la charla,

104
00:05:20,000 --> 00:05:22,000
o después, ¿de acuerdo?

105
00:05:22,000 --> 00:05:26,000
Vamos a intentar hacer un recorrido de cuál sería la metodología,

106
00:05:26,000 --> 00:05:32,000
cuál sería el proceso por el cual yo empiezo desde la concepción del código, del programa,

107
00:05:32,000 --> 00:05:33,000
¿de acuerdo?

108
00:05:33,000 --> 00:05:37,000
Hasta tenerlo más o menos preparado para añadiendo cosas.

109
00:05:37,000 --> 00:05:40,000
Que librerías vamos a utilizar, pues vamos a utilizar Qt4Python,

110
00:05:40,000 --> 00:05:42,000
de acuerdo a la versión 512,

111
00:05:42,000 --> 00:05:45,000
vamos a utilizar también Pyrantic, que se ha mencionado en la charla anterior,

112
00:05:45,000 --> 00:05:49,000
vamos a utilizar Pyjamel como parseador de código yámel

113
00:05:49,000 --> 00:05:53,000
para poder recuperar la lista de reproducción, ¿de acuerdo?

114
00:05:53,000 --> 00:05:58,000
Y utilizaremos Puffy y YouTubeDL para poder descargarnos los vídeos de YouTube.

115
00:05:58,000 --> 00:06:03,000
¿De acuerdo? El nombre de Qt Metal pues viene simplemente porque la lista de reproducción,

116
00:06:03,000 --> 00:06:07,000
¿vale? Pues son vídeos de metal, no por otra cosa, ¿de acuerdo?

117
00:06:07,000 --> 00:06:11,000
Vamos a estar utilizando Pippen para poder gestionar el entorno virtual, ¿de acuerdo?

118
00:06:11,000 --> 00:06:15,000
Y vamos a usarlo también para fijar dependencias.

119
00:06:15,000 --> 00:06:19,000
Un poco las herramientas que vamos a utilizar, ¿de acuerdo? Va a ser Qt4Python,

120
00:06:19,000 --> 00:06:21,000
la versión 5.15, ¿de acuerdo?

121
00:06:21,000 --> 00:06:23,000
Tenéis la documentación en este enlace,

122
00:06:23,000 --> 00:06:27,000
muy recomendable siempre que vayáis a desarrollar con cualquier tipo de librería,

123
00:06:27,000 --> 00:06:32,000
tanto si es una librería de interfaz de gráficas como si es una librería de cualquier otro tipo,

124
00:06:32,000 --> 00:06:35,000
¿vale? Tener la documentación siempre bien a mano.

125
00:06:35,000 --> 00:06:38,000
En este caso podéis encontrar con situaciones un poco raras

126
00:06:38,000 --> 00:06:44,000
cuando resolváis cosas en la documentación, ya que Qt viene primero desde más más.

127
00:06:44,000 --> 00:06:48,000
Entonces, buena parte de la documentación se hizo y se desarrolló pensando en ser más más.

128
00:06:48,000 --> 00:06:52,000
Y hay algunas partes que a lo mejor todavía no han sido trasladadas

129
00:06:52,000 --> 00:06:58,000
o no han sido traducidas correctamente a lo que viene siendo Python.

130
00:06:58,000 --> 00:07:01,000
De acuerdo a eso, os podréis encontrar ahí con situaciones extrañas.

131
00:07:01,000 --> 00:07:06,000
Vamos a utilizar Qt Creator, ¿de acuerdo? Que sería el IDE básico de Qt,

132
00:07:06,000 --> 00:07:09,000
pero que incluye también una herramienta llamada Qt Designer

133
00:07:09,000 --> 00:07:13,000
que se integró dentro del Qt Creator, que es la que podéis ver ahí un poquito más abajo.

134
00:07:13,000 --> 00:07:16,000
¿Vale? Que es para el diseño de la interfaz gráfica, ¿vale?

135
00:07:16,000 --> 00:07:19,000
Y luego también vamos a utilizar el Visual Code como IDE.

136
00:07:19,000 --> 00:07:22,000
Podéis utilizar el IDE que queráis para poder programar, por supuesto.

137
00:07:22,000 --> 00:07:26,000
Para mí nos digo que existen una versión más actualizada de Qt for Python, la 6.0, ¿vale?

138
00:07:26,000 --> 00:07:30,000
Pero cuando se prepara este código no tenía todos los módulos,

139
00:07:30,000 --> 00:07:33,000
es decir, no tenía el módulo de reproducción de vídeo,

140
00:07:33,000 --> 00:07:36,000
con lo cual pues nos quedamos con la 5.5, ¿de acuerdo?

141
00:07:36,000 --> 00:07:40,000
En cuanto a las herramientas, podéis descargarlas también de la página, ¿de acuerdo?

142
00:07:40,000 --> 00:07:43,000
Ese sería el instalador offline para poder descargarte el Qt Creator.

143
00:07:43,000 --> 00:07:48,000
No necesitáis, aparte del Qt Creator, no debería necesitar ni siquiera más librerías, ¿de acuerdo?

144
00:07:48,000 --> 00:07:53,000
Porque el Qt Creator lo único que lo necesitamos es para el diseño de la interfaz, no para otra cosa.

145
00:07:53,000 --> 00:07:55,000
Pero si queréis instalarlos en las librerías, ¿de acuerdo?

146
00:07:55,000 --> 00:07:57,000
Podéis hacerlo si estáis con una introducción de Linux,

147
00:07:57,000 --> 00:08:01,000
si miráis en los repositorios de código y en las tiendas de aplicaciones,

148
00:08:01,000 --> 00:08:03,000
¿de acuerdo? Podréis ver cómo poder descargarlo.

149
00:08:03,000 --> 00:08:06,000
Es importante que las librerías que os descarguéis de Qt,

150
00:08:06,000 --> 00:08:12,000
de acuerdo, estén en sincronía con la librería de Python que vais a utilizar en este caso, la 5.15.

151
00:08:12,000 --> 00:08:15,000
Bien, ¿cómo prepararíamos el entorno?

152
00:08:15,000 --> 00:08:18,000
Pues, empezaríamos primero creando un directorio, ¿de acuerdo?

153
00:08:18,000 --> 00:08:22,000
Y utilizando el Pipe para poder crear nuestra versión o nuestro entorno virtual,

154
00:08:22,000 --> 00:08:24,000
¿de acuerdo? Con la versión 3.9.

155
00:08:24,000 --> 00:08:26,000
3.9, la que estoy utilizando, ¿de acuerdo?

156
00:08:26,000 --> 00:08:29,000
Podéis utilizar, si queréis, la 3.6, de las 3.6 en adelante.

157
00:08:29,000 --> 00:08:38,000
Copiaríamos el código que nos aparece al izquierdo, que sería el código de las dependencias de Python,

158
00:08:38,000 --> 00:08:41,000
¿de acuerdo? Y haríamos un PipeFinstall, una vez que lo tengamos,

159
00:08:41,000 --> 00:08:45,000
para que nos instale todas esas librerías, ¿de acuerdo?

160
00:08:45,000 --> 00:08:51,000
Lo que podéis ver en la otra captura, ¿vale? La del centro, ¿vale?

161
00:08:51,000 --> 00:08:57,000
Sería un poco el esquema de cómo sería la lista de reproducción que nosotros vamos a almacenar con Pyjamel, ¿de acuerdo?

162
00:08:57,000 --> 00:09:06,000
Y más a la derecha, ¿de acuerdo? Lo que podéis ver es más o menos la estructura que yo suelo seguir a la hora de preparar lo que viene siendo mi código.

163
00:09:06,000 --> 00:09:16,000
Entonces, por ejemplo, tengo un main window, tengo un config de halo, tengo luego una carpeta de modelos y tengo también una carpeta de player, ¿de acuerdo?

164
00:09:16,000 --> 00:09:22,000
Es importante, cuando estamos trabajando, ¿de acuerdo? Colocar siempre todo lo que tenga, una interfaz gráfica en el mismo paquete.

165
00:09:22,000 --> 00:09:24,000
Ahora veremos por qué, ¿de acuerdo?

166
00:09:24,000 --> 00:09:31,000
No os preocupéis si voy un poco rápido, ¿vale? Porque quiero llegar pronto a esta parte de aquí, que es entendiendo Qt4Python.

167
00:09:31,000 --> 00:09:37,000
¿Vale? Hay tres partes principales que yo creo que son necesarias para poder entender bien el objetivo y el funcionamiento de Qt4Python.

168
00:09:37,000 --> 00:09:40,000
¿De acuerdo? Que sería prolumbrado el diseño de la interfaz gráfica.

169
00:09:40,000 --> 00:09:45,000
Si no hemos trabajado antes con interfaz gráficas, si habéis trabajado ya con interfaz gráficas,

170
00:09:45,000 --> 00:09:53,000
esa parte resultará muy sencilla porque realmente con Qt Creator es arrastrar y soltar prácticamente y hacer un par de modificaciones.

171
00:09:53,000 --> 00:09:59,000
Las señales y los slots, ¿de acuerdo? Sería el core de la experiencia de Qt4Python.

172
00:09:59,000 --> 00:10:04,000
¿De acuerdo? Más bien el core de la experiencia de Qt, ¿vale?

173
00:10:04,000 --> 00:10:09,000
Ya que realmente nos proporcionan un canal de intercomunicación entre los distintos objetos,

174
00:10:09,000 --> 00:10:14,000
bastante potente y bastante intuitivo, ¿de acuerdo?

175
00:10:14,000 --> 00:10:17,000
Y los modelos y las vistas son siempre necesarios, ¿de acuerdo?

176
00:10:17,000 --> 00:10:24,000
Cuando queramos trabajar con datos, tanto para la representación visual como para la interacción con los mismos.

177
00:10:24,000 --> 00:10:32,000
¿Vale? Las señales y los slots podéis pensar en ellas como si fueran los eventos en otro frame.

178
00:10:32,000 --> 00:10:35,000
¿De acuerdo? Yo lanzo un evento y capturo ese evento.

179
00:10:35,000 --> 00:10:40,000
Lo que ocurre es que en este caso los eventos que se lanzan son señales, de acuerdo, que llevan información,

180
00:10:40,000 --> 00:10:46,000
y los callbacks o los manejadores de eventos, en este caso, son los slots.

181
00:10:46,000 --> 00:10:51,000
¿De acuerdo? Las ranuras, donde irían integradas las señales.

182
00:10:51,000 --> 00:10:57,000
Bien, entendiendo el diseño de Wii, ¿de acuerdo? Básicamente es arrastrar y soltar, ¿vale?

183
00:10:57,000 --> 00:11:04,000
A la derecha, bueno, a la izquierda tendríamos, ¿de acuerdo? Una serie de componentes.

184
00:11:04,000 --> 00:11:10,000
A la derecha tendremos en la parte central una cuadrícula donde iremos arrastrando y soltando.

185
00:11:10,000 --> 00:11:13,000
¿De acuerdo? Diremos posicionando sobre la cuadrícula, ¿de acuerdo?

186
00:11:13,000 --> 00:11:18,000
Una vez que tengamos nuestros objetos colocados en dicha cuadrícula, ¿vale?

187
00:11:18,000 --> 00:11:24,000
Les cambiaremos los nombres en caso de que sea necesario para poder identificarlos luego, más fácilmente, en nuestro código.

188
00:11:24,000 --> 00:11:28,000
Después modificaríamos las propiedades que las podéis ver ahí resaltadas en amarillo, ¿vale?

189
00:11:28,000 --> 00:11:35,000
Por ejemplo, si queremos que intenten extenderse para ocupar todo el espacio o que intenten no ocupar todo el espacio, ¿de acuerdo?

190
00:11:35,000 --> 00:11:39,000
Modificaríamos las políticas de tamaño, los 6-Polys que se ven aquí. ¿De acuerdo?

191
00:11:39,000 --> 00:11:46,000
Y lo hemos colocado en algún momento con los layout de web, ¿vale?

192
00:11:46,000 --> 00:11:53,000
De CSS, por ejemplo, con Flex y demás. Entenderéis un poco el concepto de la política de tamaño, ¿de acuerdo?

193
00:11:53,000 --> 00:11:57,000
Si tu política es expansiva, vas a intentar ocupar todo el espacio que tiene disponible en la interfaz,

194
00:11:57,000 --> 00:12:00,000
si no, intentará reducirse. ¿Vale?

195
00:12:00,000 --> 00:12:05,000
Podemos absorber los excesos de espacio utilizando los horizontales spacer y los verticales spacer, ¿de acuerdo?

196
00:12:05,000 --> 00:12:14,000
Una vez que tengamos todo colocado, ¿vale? Más o menos tengamos todos nuestros elementos visualmente resaltados, ¿vale?

197
00:12:14,000 --> 00:12:17,000
Por así llamarlo, por así decirle, ¿de acuerdo?

198
00:12:17,000 --> 00:12:23,000
Los integraremos dentro de un layout. Y ese layout sería el que estructuraría o controlaría un poco el crecimiento,

199
00:12:23,000 --> 00:12:25,000
el dimensionamiento, por donde van a ir apareciendo.

200
00:12:25,000 --> 00:12:29,000
Suena muy complejo, ¿vale? En una primera aproximación, ¿vale?

201
00:12:29,000 --> 00:12:35,000
Pero cuando lo veamos en funcionamiento con la interfaz, ¿de acuerdo? Se verá muchísimo más claro.

202
00:12:35,000 --> 00:12:40,000
Después, una cosa que tenemos que entender es que el Qt Creator y Qt, ¿vale?

203
00:12:40,000 --> 00:12:46,000
Maneja la interfaz gráfica, al menos en el caso de los widgets, lo maneja como archivos XML, ¿de acuerdo?

204
00:12:46,000 --> 00:12:49,000
Son archivos UI, pero en el fondo son archivos XML.

205
00:12:49,000 --> 00:12:54,000
Y esos archivos XML, ¿de acuerdo? Los pasaríamos por un parseador que en el caso de Python,

206
00:12:54,000 --> 00:13:00,000
se llama PySight 2 Week. Y en el caso de la versión 6 sería PySight 6 Week, ¿vale?

207
00:13:00,000 --> 00:13:06,000
Para poder generar un archivo de clase llamado UIMainWindow.py, en este caso, ¿de acuerdo?

208
00:13:06,000 --> 00:13:10,000
Podemos ponerle el nombre que queramos, pero esta sería la recomendación de estilo.

209
00:13:10,000 --> 00:13:16,000
Y ese archivo, ¿vale? Esa clase que nos va a generar la incluimos por composición dentro de nuestra clase

210
00:13:16,000 --> 00:13:19,000
y la podemos inicializar y trabajar con ella.

211
00:13:19,000 --> 00:13:21,000
De nuevo, lo veremos más adelante.

212
00:13:21,000 --> 00:13:25,000
Las señales y los slots son una variación del patrón o celular, ¿de acuerdo?

213
00:13:25,000 --> 00:13:28,000
Entonces los objetos emiten señales, ¿vale?

214
00:13:28,000 --> 00:13:35,000
Que transportan información y los objetos poseen slots que reciben esas señales y procesan esa información, ¿de acuerdo?

215
00:13:35,000 --> 00:13:41,000
Os pongo una imagen, ¿vale? Porque yo me resulta fácil entenderlo si pienso en cables, ¿de acuerdo?

216
00:13:41,000 --> 00:13:46,000
Y placas. Entonces, una señal siempre va a ser ese cable, ¿vale?

217
00:13:46,000 --> 00:13:50,000
Que va a conectar un objeto que sería una placa con otro objeto que sería otra placa.

218
00:13:50,000 --> 00:13:52,000
Entonces, sale de uno y va hacia otro.

219
00:13:52,000 --> 00:13:56,000
¿Cómo se conectan las señales? Pues se pueden conectar, ¿de acuerdo?

220
00:13:56,000 --> 00:14:02,000
Utilizando esas sintaxis. ¿Vale? Hay dos formas de conectarlos, tanto invocando directamente a la señal del objeto

221
00:14:02,000 --> 00:14:07,000
y conectándolo directamente con el slot del otro objeto, ¿vale?

222
00:14:07,000 --> 00:14:11,000
O utilizando el método que viene dentro de QObject, ¿de acuerdo?

223
00:14:11,000 --> 00:14:15,000
Y haríamos la conexión indicando pues cuál sería el objeto, ¿de acuerdo?

224
00:14:15,000 --> 00:14:20,000
¿Cuál sería el nombre de la señal? ¿Cuál sería el objeto? ¿Cuál queremos conectar? ¿Y cuál sería el slot?

225
00:14:20,000 --> 00:14:23,000
De nuevo, se verá más claro con Cotito.

226
00:14:23,000 --> 00:14:25,000
En cuanto a los modelos y vistas, ¿de acuerdo?

227
00:14:25,000 --> 00:14:29,000
Los modelos y vistas plantean una capa por encima del origen de datos, ¿de acuerdo?

228
00:14:29,000 --> 00:14:37,000
Los modelos están por encima del origen de datos y organizan la información de tal forma que las vistas puedan seleccionar y puedan dibujarlo, ¿de acuerdo?

229
00:14:37,000 --> 00:14:40,000
El modelo en realidad se conoce como modelo vista delegado.

230
00:14:40,000 --> 00:14:43,000
No es modelo vista controlador como en web, ¿vale?

231
00:14:43,000 --> 00:14:45,000
Es lo que es modelo vista delegado.

232
00:14:45,000 --> 00:14:53,000
El modelo organiza los datos, la vista organiza los delegados y los delegados proporcionan la interacción y la visualización de cara al usuario.

233
00:14:53,000 --> 00:14:59,000
Los modelos que más se suelen utilizar suelen ser siempre los modelos de lista y los modelos de tabla,

234
00:14:59,000 --> 00:15:05,000
ya que organizan de forma intuitiva la información tanto en listas como en tablas similares a las que podemos ver en una hoja de cálculo Excel.

235
00:15:05,000 --> 00:15:06,000
¿Vale?

236
00:15:06,000 --> 00:15:14,000
Los métodos que tenemos que hacer para trabajar con ellos sería coger de heredar del Qabstrak model o del Qabstrak...

237
00:15:14,000 --> 00:15:20,000
Bueno, del Qabstrak, table model en el caso de las tablas o del Qabstrak-list model en el caso de las listas, ¿de acuerdo?

238
00:15:20,000 --> 00:15:25,000
E implementar una serie de métodos que nos van a decir el número de filas que hay, el número de columnas,

239
00:15:25,000 --> 00:15:30,000
cuáles son las capacidades que tiene cada uno con el item isenable, del item is editable, del item is selectable, ¿vale?

240
00:15:30,000 --> 00:15:37,000
El data que nos devuelve el dato que está en la posición concreta, ¿vale?

241
00:15:37,000 --> 00:15:44,000
Dependiendo también del rol que tengamos, porque podemos utilizar tanto el rol de visualización, el dato que se va a visualizar,

242
00:15:44,000 --> 00:15:49,000
y el dato de edición, el dato que se va a editar, luego también está el dato decorativo, ¿vale?

243
00:15:49,000 --> 00:15:55,000
Podemos hacer que, por ejemplo, para una misma posición, para un mismo objeto tengamos tanto un display, como una edición,

244
00:15:55,000 --> 00:16:00,000
como una decoración, que podría ser, por ejemplo, un icor.

245
00:16:00,000 --> 00:16:05,000
También las vistas, lo que hacen es lo que ya he dicho, ¿de acuerdo?

246
00:16:05,000 --> 00:16:10,000
Interrogan a los modelos, calculan el número de elementos que hay, las necesidades de espacio que tienen,

247
00:16:10,000 --> 00:16:16,000
y eso luego se lo pasan a los delegados, y los delegados se van a encontrar de repente con la difícil tarea de hacer de puente

248
00:16:16,000 --> 00:16:19,000
entre el usuario y el modelo que tienen debajo.

249
00:16:19,000 --> 00:16:26,000
La selección de los delegados normalmente se realiza de forma automática, es decir, deteniendo del tipo que estamos utilizando,

250
00:16:26,000 --> 00:16:29,000
se utilizará un delegado o se utilizará otro.

251
00:16:29,000 --> 00:16:32,000
Podemos asociar el modelo de casi cualquier tipo a casi cualquier vista.

252
00:16:32,000 --> 00:16:33,000
¿De acuerdo lo más?

253
00:16:33,000 --> 00:16:37,000
Como un suele ser tener una lista de tipo lista o una lista de tipo tabla, ¿vale?

254
00:16:37,000 --> 00:16:40,000
O incluso también una lista de tipo árbol, ¿vale?

255
00:16:40,000 --> 00:16:48,000
Pero normalmente se suele trabajar más con los modelos de tipo tabla, o más que con los modelos de tipo lista.

256
00:16:48,000 --> 00:16:54,000
¿Por qué? Porque nosotros podemos utilizar un modelo de tabla con una vista de lista, ¿de acuerdo?

257
00:16:54,000 --> 00:16:59,000
Y al utilizar un modelo de tabla con un modelo de lista, le podemos decir que solamente utilice una de las columnas

258
00:16:59,000 --> 00:17:04,000
para mostrar cuál sería el dato en sí, ¿de acuerdo?

259
00:17:04,000 --> 00:17:09,000
Y esta sería un poco la forma en la cual nosotros podemos asociar un modelo, ¿de acuerdo?

260
00:17:09,000 --> 00:17:13,000
Con una vista, simplemente tenemos la vista, le decimos cuál es el modelo que queremos utilizar

261
00:17:13,000 --> 00:17:17,000
y le indicamos cuál es la columna que queremos visualizar.

262
00:17:17,000 --> 00:17:24,000
Y ahora es el momento de ir a echarle un vistazo al código que tenemos, ¿de acuerdo?

263
00:17:24,000 --> 00:17:27,000
Bien, este sería el código, ¿de acuerdo?

264
00:17:27,000 --> 00:17:31,000
Como podéis ver, la organización sigue un poco lo que ya os había comentado.

265
00:17:31,000 --> 00:17:34,000
Estamos organizando un poco el código, ¿de acuerdo?

266
00:17:34,000 --> 00:17:37,000
tendríamos aquí el main. ¿De acuerdo?

267
00:17:37,000 --> 00:17:40,000
Es importante prácticamente todos los main van a funcionar de la misma forma.

268
00:17:40,000 --> 00:17:45,000
A mí me gusta utilizar esta nomenclatura, esta forma de acuerdo.

269
00:17:45,000 --> 00:17:48,000
O un paseador para tener los argumentos, ¿de acuerdo?

270
00:17:48,000 --> 00:17:53,000
Y esta parte de aquí es la básica que va a lanzar nuestra aplicación, ¿de acuerdo?

271
00:17:53,000 --> 00:17:59,000
Esto es lo que va a lanzar nuestro main window, que sería el punto de entrada de nuestra aplicación, ¿vale?

272
00:17:59,000 --> 00:18:02,000
Entonces, sobre este main window, ¿de acuerdo?

273
00:18:02,000 --> 00:18:04,000
Vamos a empezar a trabajar.

274
00:18:04,000 --> 00:18:08,000
Aquí tenemos el archivo UI, que este sería nuestro main window, ¿de acuerdo?

275
00:18:08,000 --> 00:18:13,000
Y este es nuestro código de nuestro archivo, de nuestra clase main window, ¿vale?

276
00:18:13,000 --> 00:18:15,000
Aquí no nos dice absolutamente nada.

277
00:18:15,000 --> 00:18:19,000
Como ya os he dicho, los UI, los archivos de interfaz gráfica, son archivos XML,

278
00:18:19,000 --> 00:18:22,000
donde viene una descripción de cuál sería la clase con la que está trabajando

279
00:18:22,000 --> 00:18:26,000
y cuál es el elemento con el cual tiene que funcionar, ¿de acuerdo?

280
00:18:26,000 --> 00:18:30,000
Pero si eso lo abrimos con el Qt Creator, ¿vale?

281
00:18:33,000 --> 00:18:35,000
Entonces, ya la cosa cambia.

282
00:18:35,000 --> 00:18:38,000
Aquí ya podemos ver, entonces, que nuestro archivo main window,

283
00:18:38,000 --> 00:18:43,000
que contiene, es la información acerca de los objetos y su posicionamiento dentro de cada uno de ellos, ¿vale?

284
00:18:43,000 --> 00:18:46,000
Aquí tenemos una serie de colecciones de elementos, ¿vale?

285
00:18:46,000 --> 00:18:48,000
Que son los que vamos a utilizar.

286
00:18:48,000 --> 00:18:53,000
Tenemos tanto los text edit, que serían los line edit, que serían estos de aquí, ¿de acuerdo?

287
00:18:53,000 --> 00:18:56,000
Tenemos también botones, tenemos también las vistas,

288
00:18:56,000 --> 00:19:01,000
y tenemos también una barra de acciones y una barra de... ¿de acuerdo?

289
00:19:01,000 --> 00:19:04,000
El proceso que ya os he comentado es bastante simple, ¿de acuerdo?

290
00:19:04,000 --> 00:19:06,000
Voy a hacer un pequeño destrozo aquí para que podamos verlo.

291
00:19:06,000 --> 00:19:09,000
Seleccionamos, pulsamos con el secundario, tenemos el layout,

292
00:19:09,000 --> 00:19:14,000
y le decimos que queremos romper el layout para que nos deje un poco de espacio.

293
00:19:14,000 --> 00:19:17,000
Si nosotros quisiéramos, por ejemplo, añadir un nuevo elemento visual,

294
00:19:17,000 --> 00:19:21,000
simplemente arrastraríamos y soltaríamos.

295
00:19:21,000 --> 00:19:24,000
Ya tenemos aquí nuestro elemento visual y lo tenemos aquí identificado.

296
00:19:24,000 --> 00:19:28,000
Para poder identificarlo, le cambiaremos el nombre,

297
00:19:31,000 --> 00:19:33,000
un poco redundante, llamar lo botón acción button,

298
00:19:33,000 --> 00:19:36,000
¿de acuerdo? Pero podríamos llamarlos simplemente acción button.

299
00:19:36,000 --> 00:19:38,000
¿Por qué le ponemos el nombre?

300
00:19:38,000 --> 00:19:41,000
El nombre del tipo después, pues, para identificarlo más fácilmente.

301
00:19:41,000 --> 00:19:43,000
De acuerdo, y así sabemos en un vistazo en el código,

302
00:19:43,000 --> 00:19:45,000
que estamos hablando de un line edit, que estamos hablando de un botón,

303
00:19:45,000 --> 00:19:48,000
o que estamos hablando de cualquier otra cosa.

304
00:19:48,000 --> 00:19:49,000
¿Vale?

305
00:19:49,000 --> 00:19:53,000
Estos objetos, luego los seleccionaríamos, por ejemplo, podríamos seleccionar

306
00:19:53,000 --> 00:19:55,000
dos pushbutton, ¿vale?

307
00:19:55,000 --> 00:19:58,000
Los marcaríamos y diríamos que los queremos tener en un layout horizontal,

308
00:19:58,000 --> 00:20:00,000
y los tendríamos en nuestro layout horizontal,

309
00:20:00,000 --> 00:20:03,000
¿de acuerdo? Como podéis ver, al moverlo se re-menciona.

310
00:20:03,000 --> 00:20:06,000
Si este layout lo incorporamos dentro de otro layout,

311
00:20:06,000 --> 00:20:10,000
cuando estemos desplazando ese layout, también se irán modificando.

312
00:20:10,000 --> 00:20:15,000
Bien, vamos a salir de aquí,

313
00:20:15,000 --> 00:20:18,000
volvemos a hacer un layout, ¿vale?

314
00:20:18,000 --> 00:20:22,000
Y ya tenemos nuestro código un poco como debería de estar.

315
00:20:22,000 --> 00:20:26,000
Volvemos de nuevo a nuestro código.

316
00:20:26,000 --> 00:20:28,000
Como ya os he dicho, ¿de acuerdo?

317
00:20:28,000 --> 00:20:30,000
Iríamos creando las cosas.

318
00:20:30,000 --> 00:20:35,000
Esta forma de aquí sería para poder cargar el mindwindow que hemos hecho anteriormente, ¿de acuerdo?

319
00:20:35,000 --> 00:20:39,000
Nosotros decimos, ¿vale? Voy a utilizar el PSI2, el WIC AR, ¿de acuerdo?

320
00:20:39,000 --> 00:20:42,000
Y eso nos genera este archivo de aquí.

321
00:20:42,000 --> 00:20:45,000
Y este archivo de aquí contiene una clase, la cual vamos a incluir aquí,

322
00:20:45,000 --> 00:20:49,000
y vamos a llamar siempre al método setupUi de esta clase, ¿vale?

323
00:20:49,000 --> 00:20:54,000
Para que se dedique a realizar las conexiones entre los elementos que necesitamos.

324
00:20:54,000 --> 00:20:58,000
¿De acuerdo? Y luego aquí tenemos el DataWidgetMapper.

325
00:20:58,000 --> 00:21:05,000
Espera, ¿vale? Y entonces, ¿qué diantres es ese DataWidgetMapper?

326
00:21:05,000 --> 00:21:08,000
Vamos a ampliar un poco, entonces, la información, ¿vale?

327
00:21:08,000 --> 00:21:10,000
El DataWidgetMapper, ¿vale?

328
00:21:10,000 --> 00:21:12,000
Es un intermediario entre un modelo y uno o varios widgets,

329
00:21:12,000 --> 00:21:14,000
de esta forma que la información, ¿vale?

330
00:21:14,000 --> 00:21:19,000
Se visualiza no ya en la lista, sino también en los distintos widgets, ¿vale?

331
00:21:19,000 --> 00:21:21,000
Que nosotros vamos marcando.

332
00:21:21,000 --> 00:21:27,000
En C++, ¿de acuerdo? Qt utiliza el sistema de propiedades mediante metaprogramación, ¿vale?

333
00:21:27,000 --> 00:21:31,000
Y entonces ese sistema de propiedades nos permite conectar tanto un objeto,

334
00:21:31,000 --> 00:21:33,000
¿de acuerdo? Con una propiedad en concreto.

335
00:21:33,000 --> 00:21:36,000
Es decir, yo le voy a añadir un mapeado, le voy a decir,

336
00:21:36,000 --> 00:21:39,000
mira, este objeto que estoy recuperando, ¿de acuerdo? Que sería este de aquí,

337
00:21:39,000 --> 00:21:41,000
lo voy a introducir aquí.

338
00:21:41,000 --> 00:21:43,000
Y lo voy a mapear de esta manera.

339
00:21:43,000 --> 00:21:45,000
Y entonces dice, ¿vale? Perfecto.

340
00:21:45,000 --> 00:21:47,000
Con estas propiedades, lo hacemos.

341
00:21:47,000 --> 00:21:49,000
¿Y qué es lo que nos va a proporcionar eso? ¿Vale?

342
00:21:49,000 --> 00:21:51,000
Pues lo que nos va a proporcionar eso.

343
00:21:53,000 --> 00:21:56,000
De acuerdo, vamos a avanzar un poco la pitación aquí rápidamente.

344
00:21:59,000 --> 00:22:02,000
Lo que nos va a proporcionar es este movimiento de aquí.

345
00:22:02,000 --> 00:22:05,000
Es decir, que nosotros podemos ir desplazando arriba y abajo.

346
00:22:05,000 --> 00:22:08,000
¿De acuerdo? Y se mueven en sincronía, ¿vale?

347
00:22:08,000 --> 00:22:10,000
Va cambiando en sincronía.

348
00:22:10,000 --> 00:22:12,000
Lo que nosotros estamos mostrando en el formulario,

349
00:22:12,000 --> 00:22:14,000
estamos mostrando en estos elementos de aquí,

350
00:22:14,000 --> 00:22:16,000
con respecto al que nosotros ya tenemos.

351
00:22:16,000 --> 00:22:19,000
Vamos a echarle ahora un vistazo a lo que son los módulos.

352
00:22:19,000 --> 00:22:21,000
Los módulos son estos de aquí.

353
00:22:21,000 --> 00:22:23,000
Me acuerdo como ya os he comentado antes en los módulos.

354
00:22:23,000 --> 00:22:26,000
Nosotros deberíamos tener una serie de métodos para que las pistas

355
00:22:26,000 --> 00:22:28,000
puedan interactuar correctamente con ellos

356
00:22:28,000 --> 00:22:30,000
y puedan recuperar la información que necesitamos.

357
00:22:30,000 --> 00:22:32,000
Para poder hacer eso,

358
00:22:32,000 --> 00:22:34,000
de acuerdo, necesitamos implementar el route count,

359
00:22:34,000 --> 00:22:36,000
necesitamos implementar el data

360
00:22:36,000 --> 00:22:39,000
y necesitariamos, en caso de que tengamos un modelo editable,

361
00:22:39,000 --> 00:22:41,000
¿vale? Necesitaríamos también el flags

362
00:22:41,000 --> 00:22:43,000
y necesitariamos también el set de módulos.

363
00:22:43,000 --> 00:22:46,000
Para poder modificar los datos.

364
00:22:46,000 --> 00:22:49,000
El cumbo del index es una clase que nos identifica dentro del modelo

365
00:22:49,000 --> 00:22:51,000
la posición del dato.

366
00:22:51,000 --> 00:22:54,000
Normalmente el cumbo del index lo que incluye es tanto el row

367
00:22:54,000 --> 00:22:57,000
como el column para poder identificar el dato concreto

368
00:22:57,000 --> 00:22:59,000
que nosotros queremos mostrar.

369
00:23:00,000 --> 00:23:02,000
En este caso, podemos ir añadiendo métodos

370
00:23:02,000 --> 00:23:04,000
y podemos ir añadiendo cosas, ¿vale?

371
00:23:04,000 --> 00:23:06,000
Y esto de aquí, ¿vale?

372
00:23:06,000 --> 00:23:08,000
Vamos a ir ahora a ver el YouTube player,

373
00:23:08,000 --> 00:23:11,000
de acuerdo, porque hay otro apartado que queremos ver.

374
00:23:11,000 --> 00:23:13,000
Ya hemos mencionado las listas, ¿de acuerdo?

375
00:23:13,000 --> 00:23:15,000
Bueno, ya hemos mencionado las señales.

376
00:23:15,000 --> 00:23:17,000
Podemos añadir señales.

377
00:23:17,000 --> 00:23:20,000
Podemos crear nuestras propias señales dentro de los objetos de YouTube, ¿vale?

378
00:23:20,000 --> 00:23:23,000
Simplemente importamos nuestra señal, ¿vale?

379
00:23:23,000 --> 00:23:25,000
Y nuestro slot.

380
00:23:25,000 --> 00:23:27,000
Y entonces, creamos la señal con el tipo.

381
00:23:27,000 --> 00:23:29,000
Luego podemos realizar la conexión,

382
00:23:29,000 --> 00:23:31,000
de acuerdo,

383
00:23:31,000 --> 00:23:33,000
y luego podemos emitir la señal.

384
00:23:33,000 --> 00:23:35,000
¿De acuerdo?

385
00:23:35,000 --> 00:23:37,000
A ver, volvemos aquí.

386
00:23:37,000 --> 00:23:39,000
Pum.

387
00:23:39,000 --> 00:23:41,000
Hay que tener en cuenta, ¿vale?

388
00:23:41,000 --> 00:23:43,000
que las señales no saltan,

389
00:23:43,000 --> 00:23:45,000
no saltan entre hebras, ¿vale?

390
00:23:45,000 --> 00:23:47,000
Ni tampoco saltan entre procesos.

391
00:23:47,000 --> 00:23:49,000
Así es que vamos a tener cuidado con eso,

392
00:23:49,000 --> 00:23:51,000
ya que si estamos trabajando con programas

393
00:23:51,000 --> 00:23:53,000
que sean fuertemente hebrados, o sea, multi-hebrados, ¿vale?

394
00:23:53,000 --> 00:23:55,000
No podemos utilizar las señales

395
00:23:55,000 --> 00:23:57,000
para comunicarlo.

396
00:23:57,000 --> 00:23:59,000
Deberíamos utilizar otros mecanismos

397
00:23:59,000 --> 00:24:01,000
para poder interactuar con ellos.

398
00:24:01,000 --> 00:24:03,000
¿De acuerdo?

399
00:24:03,000 --> 00:24:05,000
Otra cosa que también podemos hacer

400
00:24:05,000 --> 00:24:07,000
es modificar los archivos UP.

401
00:24:07,000 --> 00:24:09,000
Una cosa, Antonio.

402
00:24:09,000 --> 00:24:11,000
Esto es un poco, ya digo,

403
00:24:11,000 --> 00:24:13,000
estamos fuera del tiempo

404
00:24:13,000 --> 00:24:15,000
de la charla principal, que era la última pregunta.

405
00:24:15,000 --> 00:24:17,000
Esto lo digo porque, como de montón de preguntas,

406
00:24:17,000 --> 00:24:19,000
puede ser un poquito, pero...

407
00:24:19,000 --> 00:24:21,000
Lo siento, vale, vale, perfecto.

408
00:24:21,000 --> 00:24:23,000
Ya estamos, ya hemos terminado.

409
00:24:23,000 --> 00:24:25,000
Ya hemos terminado porque esto sería lo último,

410
00:24:25,000 --> 00:24:27,000
directamente, ¿vale?

411
00:24:27,000 --> 00:24:29,000
Que es que podemos modificar el archivo Ui,

412
00:24:29,000 --> 00:24:31,000
el punto Pi, ¿vale?

413
00:24:31,000 --> 00:24:33,000
Si nos encontramos con un elemento que lo tenemos.

414
00:24:33,000 --> 00:24:35,000
Que eso es lo que a mí me ocurrió aquí, por ejemplo, con el reproductor,

415
00:24:35,000 --> 00:24:37,000
no lo incluía.

416
00:24:37,000 --> 00:24:39,000
La cuestión está en que, si le damos al play,

417
00:24:39,000 --> 00:24:41,000
podremos ver cómo funciona, se descara el vídeo

418
00:24:41,000 --> 00:24:43,000
de YouTube, ¿de acuerdo?

419
00:24:43,000 --> 00:24:45,000
Y podemos reproducirlo.

420
00:24:45,000 --> 00:24:47,000
Y ya lo cortamos porque si no, nos podemos encontrar

421
00:24:47,000 --> 00:24:49,000
con, pues, derechos autóricos,

422
00:24:49,000 --> 00:24:51,000
¿de acuerdo? Aquí tenéis también

423
00:24:51,000 --> 00:24:53,000
una serie de enlaces y referencias,

424
00:24:53,000 --> 00:24:55,000
incluyendo también

425
00:24:55,000 --> 00:24:57,000
el enlace para el Qt Metal,

426
00:24:57,000 --> 00:24:59,000
¿vale?, para el repositorio, ¿vale?

427
00:24:59,000 --> 00:25:01,000
Y el resto de elementos también para que podáis ver.

428
00:25:01,000 --> 00:25:03,000
Y también un enlace a login de John Pleas, por si acaso.

429
00:25:03,000 --> 00:25:05,000
Entonces, si hay alguna pregunta,

430
00:25:05,000 --> 00:25:07,000
o si hay tiempo para preguntas,

431
00:25:07,000 --> 00:25:09,000
perfecto.

432
00:25:09,000 --> 00:25:11,000
Sí, sí hay.

433
00:25:11,000 --> 00:25:13,000
De hecho, tenemos una pregunta de Andros,

434
00:25:13,000 --> 00:25:15,000
que pregunta ¿qué limitaciones

435
00:25:15,000 --> 00:25:17,000
hay a la hora de distribuir

436
00:25:17,000 --> 00:25:19,000
entre sistemas operativos?

437
00:25:19,000 --> 00:25:21,000
Limitación a la hora de distribuir entre sistemas operativos,

438
00:25:21,000 --> 00:25:23,000
yo te puedo decir que he estado trabajando

439
00:25:23,000 --> 00:25:25,000
en un ordenador con Linux Ubuntu,

440
00:25:25,000 --> 00:25:27,000
¿de acuerdo?, con la 1810, incluso con la 2004,

441
00:25:27,000 --> 00:25:29,000
y he estado haciendo

442
00:25:29,000 --> 00:25:31,000
el código con Qt, ¿vale?,

443
00:25:31,000 --> 00:25:33,000
y luego lo he lanzado

444
00:25:33,000 --> 00:25:35,000
en una máquina con Windows, directamente.

445
00:25:35,000 --> 00:25:37,000
¿Vale?

446
00:25:37,000 --> 00:25:39,000
Simplemente descargar del repositorio, introducirlo,

447
00:25:39,000 --> 00:25:41,000
utilizar ppm

448
00:25:41,000 --> 00:25:43,000
y lanzarlo.

449
00:25:43,000 --> 00:25:45,000
Así de simple.

450
00:25:45,000 --> 00:25:47,000
Es totalmente compatible.

451
00:25:47,000 --> 00:25:49,000
Hay más preguntas, ¿eh?

452
00:25:49,000 --> 00:25:51,000
Yo tenía una pregunta también.

453
00:25:51,000 --> 00:25:53,000
Eso es lo que hago.

454
00:25:53,000 --> 00:25:55,000
Pero bueno, no,

455
00:25:55,000 --> 00:25:57,000
primero la gente que está por ahí por disco.

456
00:25:57,000 --> 00:25:59,000
Bueno, bueno,

457
00:25:59,000 --> 00:26:01,000
esta pregunta, Cristian,

458
00:26:01,000 --> 00:26:03,000
¿qué es lo más difícil para aprender

459
00:26:03,000 --> 00:26:05,000
en Qt?

460
00:26:07,000 --> 00:26:09,000
Lo más difícil para aprender en Qt,

461
00:26:09,000 --> 00:26:11,000
igual que en cualquier lenguaje de programación,

462
00:26:11,000 --> 00:26:13,000
es aprender a pensar

463
00:26:13,000 --> 00:26:15,000
como te dice el lenguaje.

464
00:26:15,000 --> 00:26:17,000
De acuerdo, normalmente

465
00:26:17,000 --> 00:26:19,000
todo el lenguaje tiene una estructura,

466
00:26:19,000 --> 00:26:21,000
tiene una forma, tiene una sintaxis,

467
00:26:21,000 --> 00:26:23,000
de acuerdo, entonces, aprender esa forma de esa sintaxis

468
00:26:23,000 --> 00:26:25,000
siempre es lo primero que hacemos.

469
00:26:25,000 --> 00:26:27,000
Pero luego los framework incorporan ciertos mecanismos

470
00:26:27,000 --> 00:26:29,000
que te obligan

471
00:26:29,000 --> 00:26:31,000
o te guían a la hora de hacer las cosas.

472
00:26:31,000 --> 00:26:33,000
Entonces, lo más difícil a la hora de aprender Qt,

473
00:26:33,000 --> 00:26:35,000
yo creo que es entender

474
00:26:35,000 --> 00:26:37,000
esa filosofía que tiene detrás

475
00:26:37,000 --> 00:26:39,000
y que viene también un poco ya de

476
00:26:39,000 --> 00:26:41,000
de cemar más. Es entender

477
00:26:41,000 --> 00:26:43,000
el funcionamiento de los modelos

478
00:26:43,000 --> 00:26:45,000
y entender un poco el funcionamiento del

479
00:26:45,000 --> 00:26:47,000
sistema de señales. Una vez que tenemos

480
00:26:47,000 --> 00:26:49,000
la idea de cómo funcionan los modelos

481
00:26:49,000 --> 00:26:51,000
y las vistas y las señales,

482
00:26:51,000 --> 00:26:53,000
podemos empezar a hacer aplicaciones

483
00:26:53,000 --> 00:26:55,000
de este tipo. Y luego ya si queremos

484
00:26:55,000 --> 00:26:57,000
seguir a mayores,

485
00:26:57,000 --> 00:26:59,000
entonces si nos podemos encontrar

486
00:26:59,000 --> 00:27:01,000
ya con otras

487
00:27:01,000 --> 00:27:03,000
series de problemas.

488
00:27:03,000 --> 00:27:05,000
Y luego también entender que hay situaciones

489
00:27:05,000 --> 00:27:07,000
que nos van a representar un problema adicional

490
00:27:07,000 --> 00:27:09,000
porque el código se hizo pensando

491
00:27:09,000 --> 00:27:11,000
en cemas más,

492
00:27:11,000 --> 00:27:13,000
o sea, el desarrollo inicial

493
00:27:13,000 --> 00:27:15,000
de Qt es cemas más y nosotros estamos

494
00:27:15,000 --> 00:27:17,000
trabajando en Python. Entonces, hay cosas

495
00:27:17,000 --> 00:27:19,000
en cemas más que se hacen

496
00:27:19,000 --> 00:27:21,000
como por ejemplo todo el tema de hebras,

497
00:27:21,000 --> 00:27:23,000
que en Qt

498
00:27:23,000 --> 00:27:25,000
en cemas más funcionan utilizando librerías posix.

499
00:27:25,000 --> 00:27:27,000
Mientras que

500
00:27:27,000 --> 00:27:29,000
cuando trabajamos en Python

501
00:27:29,000 --> 00:27:31,000
nosotros tenemos el heal

502
00:27:31,000 --> 00:27:33,000
y el heal nos obstaculiza ahí en este trabajo

503
00:27:33,000 --> 00:27:35,000
con hebras.

504
00:27:35,000 --> 00:27:37,000
Luego también

505
00:27:37,000 --> 00:27:39,000
el uso de asinquio y demás

506
00:27:39,000 --> 00:27:41,000
de acuerdo también puede dar

507
00:27:41,000 --> 00:27:43,000
algún otro problema. Ya que utilizamos un look

508
00:27:43,000 --> 00:27:45,000
principal, etc.

509
00:27:45,000 --> 00:27:47,000
Pero en principio, eso sería

510
00:27:47,000 --> 00:27:49,000
el mayor problema.

511
00:27:49,000 --> 00:27:51,000
Si me permites, Sergio, porque yo te voy a preguntar

512
00:27:51,000 --> 00:27:53,000
lo que me ha preguntado con lo que justo acabo

513
00:27:53,000 --> 00:27:55,000
de preguntar es, para gente que está

514
00:27:55,000 --> 00:27:57,000
acostumbrada a hacer interfaces

515
00:27:57,000 --> 00:27:59,000
web, por ejemplo, que también haces

516
00:27:59,000 --> 00:28:01,000
en Angular, ¿qué es lo más distinto

517
00:28:01,000 --> 00:28:03,000
respecto a hacer

518
00:28:03,000 --> 00:28:05,000
una interfaz web?

519
00:28:05,000 --> 00:28:07,000
El salto a

520
00:28:07,000 --> 00:28:09,000
hacer una interfaz en

521
00:28:09,000 --> 00:28:11,000
una librería como Qt.

522
00:28:11,000 --> 00:28:13,000
¿Qué es lo que es más diferente

523
00:28:13,000 --> 00:28:15,000
y lo más chocante?

524
00:28:15,000 --> 00:28:17,000
Lo más diferente y lo más chocante es

525
00:28:17,000 --> 00:28:19,000
el despreocuparte.

526
00:28:19,000 --> 00:28:21,000
Cuando estás

527
00:28:21,000 --> 00:28:23,000
haciendo una interfaz web

528
00:28:23,000 --> 00:28:25,000
es algo que tenga muy, muy, muy

529
00:28:25,000 --> 00:28:27,000
dominado el

530
00:28:27,000 --> 00:28:29,000
lenguaje

531
00:28:29,000 --> 00:28:31,000
el CSS, el SSDS, ¿vale?

532
00:28:31,000 --> 00:28:33,000
Tenga muy, muy dominado también

533
00:28:33,000 --> 00:28:35,000
el framework con el cual estás trabajando

534
00:28:35,000 --> 00:28:37,000
normalmente siempre que hacemos un desarrollo web

535
00:28:37,000 --> 00:28:39,000
es algo que tengamos un cliente un poco más quiquilloso

536
00:28:39,000 --> 00:28:41,000
intentamos siempre tirar de framework para agilizar

537
00:28:41,000 --> 00:28:43,000
el trabajo. Cada vez

538
00:28:43,000 --> 00:28:45,000
que tenemos que personalizar algo

539
00:28:45,000 --> 00:28:47,000
tenemos que bajar al código y tenemos que estar

540
00:28:47,000 --> 00:28:49,000
truqueteando, tenemos que estar truqueteando

541
00:28:49,000 --> 00:28:51,000
y tenemos que estar visualizando y luego volver

542
00:28:51,000 --> 00:28:53,000
a modificar y luego volver a visualizar

543
00:28:53,000 --> 00:28:55,000
madre mía este navegador se me ha ido

544
00:28:55,000 --> 00:28:57,000
de madre aquí en Chrome me lo dibuja

545
00:28:57,000 --> 00:28:59,000
Internet Explorer no en Safari

546
00:28:59,000 --> 00:29:01,000
no me carga siquiera

547
00:29:01,000 --> 00:29:03,000
cuando lo

548
00:29:03,000 --> 00:29:05,000
cuando lo programas con Qt o programas con cualquier otro

549
00:29:05,000 --> 00:29:07,000
todo eso desaparece.

550
00:29:07,000 --> 00:29:09,000
Simplemente dices ¿qué voy a hacer? Voy a coger

551
00:29:09,000 --> 00:29:11,000
voy a coger una línea la voy a poner aquí, lo voy a enlazar

552
00:29:11,000 --> 00:29:13,000
y lo voy a lanzar

553
00:29:13,000 --> 00:29:15,000
y mientras sea compatible mientras

554
00:29:15,000 --> 00:29:17,000
que se pueda ejecutar el Python

555
00:29:17,000 --> 00:29:19,000
y se pueda ejecutar la máquina ahí

556
00:29:19,000 --> 00:29:21,000
se va a lanzar y no te tienes que preocupar

557
00:29:21,000 --> 00:29:23,000
de si lo va a reproducir, no lo va a reproducir

558
00:29:23,000 --> 00:29:25,000
va a cambiar los colores

559
00:29:25,000 --> 00:29:27,000
se va a aparecer

560
00:29:27,000 --> 00:29:29,000
el entorno en un sitio o en otro

561
00:29:29,000 --> 00:29:31,000
un poco es eso

562
00:29:31,000 --> 00:29:33,000
con lo que te encuentras

563
00:29:33,000 --> 00:29:35,000
simplifican mucho ese desarrollo

564
00:29:37,000 --> 00:29:39,000
Antonio yo te quería preguntar

565
00:29:39,000 --> 00:29:41,000
con respecto a Qt Creator

566
00:29:41,000 --> 00:29:43,000
que estaba ahora echando un vistazo a la web

567
00:29:43,000 --> 00:29:45,000
es un software de pago ¿no?

568
00:29:45,000 --> 00:29:47,000
No, es gratuito

569
00:29:47,000 --> 00:29:49,000
la diferencia está

570
00:29:49,000 --> 00:29:51,000
en que Qt utiliza un modelo híbrido

571
00:29:51,000 --> 00:29:53,000
de acuerdo desde los inicios empezó

572
00:29:53,000 --> 00:29:55,000
primero siendo

573
00:29:55,000 --> 00:29:57,000
TrollTech, después pasó a ser propiedad de Digia

574
00:29:57,000 --> 00:29:59,000
después pasó a ser propiedad de Qt Company

575
00:29:59,000 --> 00:30:01,000
como fue evolucionando

576
00:30:01,000 --> 00:30:03,000
entonces ha ido pasando por distintos modelos

577
00:30:03,000 --> 00:30:05,000
estuvo también un tiempo en Nokia

578
00:30:05,000 --> 00:30:07,000
durante un periodo de tiempo también como estaba con Nokia

579
00:30:07,000 --> 00:30:09,000
fue también de Microsoft

580
00:30:09,000 --> 00:30:11,000
entonces tienen un modelo híbrido

581
00:30:11,000 --> 00:30:13,000
de LGPL

582
00:30:13,000 --> 00:30:15,000
de QMiniTi

583
00:30:15,000 --> 00:30:17,000
y luego tienen otro modelo

584
00:30:17,000 --> 00:30:19,000
también cerrado para empresas donde durante un tiempo estuvieron colocando

585
00:30:19,000 --> 00:30:21,000
los diferentes modelos

586
00:30:21,000 --> 00:30:23,000
la página tiene unas ciertas

587
00:30:23,000 --> 00:30:25,000
vamos a decir

588
00:30:25,000 --> 00:30:27,000
suavemente tiene unas ciertas barreras de entrada

589
00:30:27,000 --> 00:30:29,000
que intentan orientar un poco

590
00:30:29,000 --> 00:30:31,000
a la versión de pago

591
00:30:31,000 --> 00:30:33,000
pero realmente

592
00:30:33,000 --> 00:30:35,000
si entras en el instalador offline

593
00:30:35,000 --> 00:30:37,000
que puedes descargar ese instalador offline

594
00:30:37,000 --> 00:30:39,000
y si te quieres descargar la versión Cominti

595
00:30:39,000 --> 00:30:41,000
que tiene un LGPL gratuito

596
00:30:41,000 --> 00:30:43,000
y no tienes que pagar como mucho

597
00:30:43,000 --> 00:30:45,000
que te pedira que te hagas una cuenta de usuario

598
00:30:45,000 --> 00:30:47,000
que tiene gratuito

599
00:30:47,000 --> 00:30:49,000
y descargar el instalador online

600
00:30:49,000 --> 00:30:51,000
que ya es el que se va a encargar

601
00:30:51,000 --> 00:30:53,000
de descargar las distintas librerías de

602
00:30:53,000 --> 00:30:55,000
de temas más, las distintas herramientas que tiene

603
00:30:55,000 --> 00:30:57,000
de acuerdo y si te interesa el Clip Creator

604
00:30:57,000 --> 00:30:59,000
pues simplemente lo instalas

605
00:30:59,000 --> 00:31:01,000
de todas formas también se está utilizando Linux

606
00:31:01,000 --> 00:31:03,000
se está utilizando Geno Linux

607
00:31:03,000 --> 00:31:05,000
la mayoría de las distribuciones

608
00:31:05,000 --> 00:31:07,000
suelen incluir Qt

609
00:31:07,000 --> 00:31:09,000
dentro de sus repositorios

610
00:31:09,000 --> 00:31:11,000
las versiones fijadas para cada una

611
00:31:11,000 --> 00:31:13,000
de las versiones, entonces es fácil

612
00:31:13,000 --> 00:31:15,000
entrar en Ubuntu y buscar en la tienda de aplicaciones Qt

613
00:31:15,000 --> 00:31:17,000
y descargarte todo eso

614
00:31:17,000 --> 00:31:19,000
en Fedora, en Arch Linux, Manjaro

615
00:31:19,000 --> 00:31:21,000
con todas ellas debería

616
00:31:21,000 --> 00:31:23,000
debería aparecer

617
00:31:23,000 --> 00:31:25,000
ya que por ejemplo KDE está programado

618
00:31:25,000 --> 00:31:27,000
con Qt, entonces como todo

619
00:31:27,000 --> 00:31:29,000
el escritor de KDE está programado con Qt

620
00:31:29,000 --> 00:31:31,000
tienen además una cláusula

621
00:31:31,000 --> 00:31:33,000
adicional que les prohíbe

622
00:31:33,000 --> 00:31:35,000
cerrar o licenciar

623
00:31:35,000 --> 00:31:37,000
de forma privativa ese segmento de código

624
00:31:37,000 --> 00:31:39,000
y parece ser que ahí dentro también

625
00:31:39,000 --> 00:31:41,000
estaría esa parte del Clip Creator

626
00:31:41,000 --> 00:31:43,000
por ahora

627
00:31:43,000 --> 00:31:45,000
de acuerdo, gracias Antonio

628
00:31:45,000 --> 00:31:47,000
una pregunta final

629
00:31:47,000 --> 00:31:49,000
¿Has trabajado con

630
00:31:49,000 --> 00:31:51,000
con las otras alternativas

631
00:31:51,000 --> 00:31:53,000
GTK, el regalo otra que se utiliza

632
00:31:53,000 --> 00:31:55,000
en Linux

633
00:31:55,000 --> 00:31:57,000
bastante que Gnome

634
00:31:57,000 --> 00:31:59,000
y todo ese está trabajando con

635
00:31:59,000 --> 00:32:01,000
estas otras o

636
00:32:01,000 --> 00:32:03,000
las conozco de OIDAS

637
00:32:03,000 --> 00:32:05,000
donde sé que existen y no he llegado a

638
00:32:05,000 --> 00:32:07,000
trabajarlas ya que en principio

639
00:32:07,000 --> 00:32:09,000
mi trabajo hace que me diente

640
00:32:09,000 --> 00:32:11,000
más a lo mejor a los desarrollos web

641
00:32:11,000 --> 00:32:13,000
que a los desarrollos de herramientas

642
00:32:13,000 --> 00:32:15,000
normalmente los desarrollos de herramientas que hago

643
00:32:15,000 --> 00:32:17,000
son principalmente para mí para casos puntuales

644
00:32:17,000 --> 00:32:19,000
en los cuales haya que acceder

645
00:32:19,000 --> 00:32:21,000
a ciertas partes de las APIs

646
00:32:21,000 --> 00:32:23,000
de una forma un poco más controlada

647
00:32:23,000 --> 00:32:25,000
entonces cuando por ejemplo hay que

648
00:32:25,000 --> 00:32:27,000
preparar algo de forma muy rápida

649
00:32:27,000 --> 00:32:29,000
para que lo utilice alguien

650
00:32:29,000 --> 00:32:31,000
suelo tirar de el desarrollo de Qt

651
00:32:31,000 --> 00:32:33,000
entonces le pongo una interfaz gráfica

652
00:32:33,000 --> 00:32:35,000
y facilito mucho el flujo de trabajo de la gente

653
00:32:35,000 --> 00:32:37,000
TechInter

654
00:32:37,000 --> 00:32:39,000
GTQ, me parece que has dicho no

655
00:32:39,000 --> 00:32:41,000
GTQ

656
00:32:41,000 --> 00:32:43,000
las conozco, sé que existen pero

657
00:32:43,000 --> 00:32:45,000
no he llegado a trabajar con ellas precisamente porque

658
00:32:45,000 --> 00:32:47,000
una vez que aprendes a trabajar

659
00:32:47,000 --> 00:32:49,000
con una librería gráfica como Qt

660
00:32:49,000 --> 00:32:51,000
y ves que cubre tus necesidades

661
00:32:51,000 --> 00:32:53,000
en este sentido

662
00:32:53,000 --> 00:32:55,000
a lo mejor no ver la necesidad imperiosa

663
00:32:55,000 --> 00:32:57,000
de ir y aprender

664
00:32:57,000 --> 00:32:59,000
de aprender otra librería

665
00:32:59,000 --> 00:33:01,000
estaría bien, es uno de los objetivos

666
00:33:01,000 --> 00:33:03,000
que me gustaría tener para este año

667
00:33:03,000 --> 00:33:05,000
o para el siguiente

668
00:33:05,000 --> 00:33:07,000
Bueno, pues nada pa' entonces

669
00:33:07,000 --> 00:33:09,000
¿no?

670
00:33:09,000 --> 00:33:11,000
Muchas gracias por la presentación

671
00:33:11,000 --> 00:33:13,000
Lo siento mucho que haya sido tan apresurado

672
00:33:13,000 --> 00:33:15,000
porque me hubiera gustado

673
00:33:15,000 --> 00:33:17,000
para memorizar algunos detalles

674
00:33:17,000 --> 00:33:19,000
Sí, es bueno, es para aprender

675
00:33:19,000 --> 00:33:21,000
el Qt y por claro, es complicado

676
00:33:21,000 --> 00:33:23,000
ver todo el corrido

677
00:33:23,000 --> 00:33:25,000
Es muy fum

678
00:33:25,000 --> 00:33:27,000
que había faltado ahorita

679
00:33:27,000 --> 00:33:29,000
para poder verlo con un poquito más de detalle

680
00:33:29,000 --> 00:33:31,000
Sí, hay un próximo taller

681
00:33:31,000 --> 00:33:33,000
y me junto el taller

682
00:33:33,000 --> 00:33:35,000
que no tengo idea de hacer con los verdades

683
00:33:35,000 --> 00:33:37,000
Lo que falta es lo que vamos viendo

684
00:33:37,000 --> 00:33:39,000
por Discord

685
00:33:39,000 --> 00:33:41,000
Muy bien

686
00:33:41,000 --> 00:33:43,000
¡Venga!

687
00:33:43,000 --> 00:33:59,000
¡Saludos a todos!

