1
00:00:00,000 --> 00:00:21,620
que espero que hayáis pasado un muy buen día es el primero reservar fuerzas para mañana

2
00:00:21,620 --> 00:00:27,820
portaros bien esta noche por favor recordad que mañana por la mañana hay una super queínote que

3
00:00:27,820 --> 00:00:33,280
es el que viene de los hondes especial para vernos para hablarnos así que fiesta pero con

4
00:00:33,280 --> 00:00:40,960
moderación vale y nada que eso que lo hemos pasado muy bien que espero que vosotros también

5
00:00:40,960 --> 00:00:47,560
tenemos la Asamblea de país en España según acaben las light all,s de acuerdo podéis quedaros

6
00:00:47,560 --> 00:00:52,880
si queréis lo único que los votos están reservados a socias de la de la asociación

7
00:00:52,880 --> 00:00:59,600
y nada más os vamos a contar que son las light all porque si nunca lo habéis conocido charlas

8
00:00:59,600 --> 00:01:06,120
relámpago y vamos llamando a todas estas filas estupenda que tenemos aquí de ponentes

9
00:01:10,320 --> 00:01:17,840
muy buena vale las lightning tocks es muy rápido lo dice todo el nombre cinco minutos de charlas

10
00:01:17,840 --> 00:01:25,080
en la que los ponentes van a estar hablando en general de cualquier temática libre vale ya

11
00:01:25,080 --> 00:01:31,960
están seleccionados así que no hay que preocuparse nada más cuando queden 30 segundos vale fijaos yo

12
00:01:31,960 --> 00:01:37,920
estaré por estrado de aquí empezaré haciendo así y todos tenéis que imitarme luego con dos dedos

13
00:01:38,920 --> 00:01:44,920
tres hasta que acabamos aplaudiendo vale eso se traduce en que acabo la charla como sé que

14
00:01:44,920 --> 00:01:49,720
eso es muy listos pero no me fío vamos a platicar venga vamos todos

15
00:01:52,000 --> 00:01:53,680
solo un dedo solo un dedo

16
00:01:56,680 --> 00:01:58,400
ahí que se oiga

17
00:02:02,400 --> 00:02:03,120
cuatro

18
00:02:03,120 --> 00:02:17,920
bueno no es difícil queréis platicar otra vez vamos bien vale pues nada empezamos ya

19
00:02:17,920 --> 00:02:31,840
estamos muy intentados porque es un proyecto super chulo y espero veros ahí

20
00:02:38,200 --> 00:02:45,040
hola hola perfecto vengo a presentarles el mejor evento de vuestras vidas y es el paican que se

21
00:02:45,040 --> 00:02:53,040
realiza el 7 al 10 de abril en girona un fin de semana todo pensado todo incluido y este evento

22
00:02:53,040 --> 00:02:58,720
para comprar las entradas tienen que inscribirse en la newsletter porque es un evento reducido a 30

23
00:02:58,720 --> 00:03:04,400
personas pero es la mejor experiencia que van a vivir y para contarlo que mejor que a través de

24
00:03:04,400 --> 00:03:13,280
imágenes bueno como ella decía el paican es un evento en el cual nos adueníamos básicamente de

25
00:03:13,280 --> 00:03:18,520
una casa de colonias si alquilamos una casa de colonias nos va tomamos un bus al que sale de

26
00:03:18,520 --> 00:03:25,760
barcelona para esta edición y termina en girona donde es en la ciudad de salt el evento y nos

27
00:03:25,760 --> 00:03:30,480
juntamos en grupo a básicamente es como una especie de jacatón pero que dura cuatro días y tres

28
00:03:30,480 --> 00:03:35,840
noches la idea es compartir mucho tiempo juntos programar en proyectos que tengamos en mente en

29
00:03:35,840 --> 00:03:41,280
ideas loca que queramos hacer y la excusa es hacer esas esos desarrollos de esos proyectos y

30
00:03:41,280 --> 00:03:46,920
demás en los cuales no encontramos tiempo en nuestra casa por fuera del trabajo etcétera entonces la

31
00:03:46,920 --> 00:03:52,000
mejor excusa para poder desarrollar esas ideas locas que tenemos con un montón de gente que

32
00:03:52,000 --> 00:03:58,800
también tiene otro montón de ideas locas si y juntarnos y bueno jugar al pipón hacer cuatro

33
00:03:58,800 --> 00:04:05,400
juegos de mesa estar en la naturaleza no es muy relajado sin preocuparnos de nada si es una

34
00:04:05,400 --> 00:04:12,040
pensión o inclusivo cuenta de desayuno almuerzo merienda y cena y lidé con eso simplemente

35
00:04:12,040 --> 00:04:17,280
preocuparnos de programar pasarla bien hacer amigos y volver con mucha más energía para seguir

36
00:04:17,280 --> 00:04:22,440
programando y colaborando en la comunidad hay malabares hay un carajo que de charlas pasa de

37
00:04:22,440 --> 00:04:27,480
todo de todo de todo de todo hay espacio para estar tranquilos sin que nadie me moleste quiero

38
00:04:27,480 --> 00:04:31,080
estar solo relajado quiero estar con gente quiero estar jugando quiero estar programando

39
00:04:31,080 --> 00:04:35,640
la idea es esa no tiene es un evento que casi no tiene ningún tipo de estructura no hay charlas

40
00:04:35,640 --> 00:04:42,000
no hay talleres sólo pasa y sucede lo que cada uno quiere que pase y sucede en el evento tenemos

41
00:04:42,000 --> 00:04:47,360
un asado argentino porque hay gente que organiza que es argentina y hace muy buenos asados y

42
00:04:48,400 --> 00:04:53,720
es todas las mujeres y todas las personas son muy bienvenidas sobre eso ya no le va a contar un

43
00:04:53,720 --> 00:04:58,520
poquito más vale el evento cuenta con un código de conducto con el cual somos bastante estrictos

44
00:04:58,520 --> 00:05:04,280
para poder tener una convivencia durante cuatro días que sea buena y adecuada no entonces tenemos

45
00:05:04,280 --> 00:05:08,600
también una habitación que es sólo para mujeres para que se sientan mucho más seguras además de

46
00:05:08,600 --> 00:05:15,000
que también en la parte de la organización participamos mujeres y eso hace que sea un evento

47
00:05:15,000 --> 00:05:19,640
donde te puedes sentir súper tranquila siempre vas a estar acompañada y contamos con todas las

48
00:05:19,640 --> 00:05:26,080
condiciones para que sea un evento seguro en cuanto a comportamientos y situaciones que podamos vivir

49
00:05:26,080 --> 00:05:34,680
la página web es triple a double u paquán es y se pueden suscribir al evento desde ahora es cupo

50
00:05:34,680 --> 00:05:40,920
limitado así que por favor inscríbanse y les haremos saber cuando saldremos la entrada

51
00:05:40,920 --> 00:05:53,600
en un léter y les avisaremos cuántas son las entradas habilidad el mejor evento de su vida no se lo pueden perder

52
00:06:10,920 --> 00:06:32,520
os voy a presentar las cosas se me iluminan los ojos tenemos por primera vez a la mejor

53
00:06:32,520 --> 00:06:41,120
drag queen científica que hay la he convencido para que venga así que trata con muchísimo cariño que

54
00:06:41,120 --> 00:06:47,640
quiero que venga cada edición y nos va a contar su proyecto que es chulísimo además es súper

55
00:06:47,640 --> 00:07:05,560
diferente cuántas drag queens habéis visto aquí la primera y bueno buenas tardes a todos a todas y

56
00:07:05,560 --> 00:07:12,200
a todos y os voy a hablar de cómo no tener más buses en vuestro código igual ahora mismo es una

57
00:07:12,200 --> 00:07:15,840
cosa que la mayor parte de vosotros no estáis entendiendo pero yo os prometo que para el final

58
00:07:15,840 --> 00:07:23,280
de esto me vais a entender o también llamado como una travesti que coge a lo justo yo os va a hablar

59
00:07:23,280 --> 00:07:29,800
de sesgos y diversidad en programación a lo primero de todo como diría veneno pero tú quien eres o

60
00:07:29,800 --> 00:07:36,720
también qué currículum tiene esta tarántula pues bueno me presento soy mario también conocida

61
00:07:36,720 --> 00:07:40,880
como sasis ayens soy doctora en física de la materia condensada y me estoy metiendo bastante

62
00:07:40,880 --> 00:07:46,720
al mundillo python porque muchos datos que analizar y la gente no lo está analizando de la mejor manera

63
00:07:46,720 --> 00:07:51,400
y también pues bueno por cosas de la vida soy travesti divulgadora aparte de todo esto pues

64
00:07:51,400 --> 00:07:56,880
bueno soy una persona bisexual no binaria disco neurodivergente para el hombre 17 no medio del

65
00:07:56,880 --> 00:08:02,160
público soy una sopa de letras tampoco os preocupéis mucho por ello igual lo doy en la cabeza si no

66
00:08:02,160 --> 00:08:05,720
se ha bloqueado que ha pasado se llama con des tendencia podéis ir a vuestra informática de

67
00:08:05,720 --> 00:08:16,720
referencia que seguro que lo están tendiendo y os quiero presentar a la busi a ver el consercio de

68
00:08:16,720 --> 00:08:25,640
transportes de saba de él hizo un concurso para tener a su nueva mascota y una estudiante de la

69
00:08:25,640 --> 00:08:31,280
escuela de artes de allí les dio esta propuesta que fue la que ganó aparte de que sea bastante creepy

70
00:08:31,280 --> 00:08:42,440
hay algo que veis que esté mal con esto si no bueno arriba a ver aparte de eso que es un poquito

71
00:08:42,440 --> 00:08:48,520
creepy para la gente de núcleos aquilio o sea de hombres que se relacionan con otros hombres

72
00:08:48,520 --> 00:08:53,360
busi es una palabra bueno busi escrito con y riega pero que se le exactamente igual es una palabra

73
00:08:53,360 --> 00:09:01,320
que se ha utilizado en el argot para hablar de sus partes pudentas vamos a decirlo así claro que

74
00:09:01,320 --> 00:09:05,800
pasó que en el momento en el que en estados unidos bueno en zonas ancoloprantes en general se

75
00:09:05,800 --> 00:09:11,040
dieron cuenta de que había una mascota que se llamaba busi pues a ver se ha hecho viral pero

76
00:09:11,040 --> 00:09:20,320
por los motivos quizás menos oportunos que diréis y tú para qué me estás contando esto prometo

77
00:09:20,320 --> 00:09:26,800
que tengo un punto vale vamos a partir de una cosa muy simple paisón es un lenguaje muy versátil

78
00:09:26,800 --> 00:09:31,640
mano arriba si estáis de acuerdo ole vale o sea estoy empezando programación pero alguna cosa

79
00:09:31,640 --> 00:09:39,480
se esto quiere decir que normalmente cuando se nos enseña programación de primeras pues se dice

80
00:09:39,480 --> 00:09:45,600
se aplica un método a unos datos a salen los datos b o se genera la cosa es que precisamente porque

81
00:09:45,600 --> 00:09:51,000
paíton es un lenguaje muy versátil también hay no me decir que haya tantas formas de hacer algo

82
00:09:51,000 --> 00:09:56,080
pero en cosas con complejas prácticamente y tantas formas de hacer algo como personas que lo están

83
00:09:56,080 --> 00:10:01,560
haciendo y esto en general es muy bueno es un lenguaje muy creativo pero también tiene una

84
00:10:01,560 --> 00:10:09,480
parte mala que es los esgos que es quién está haciendo este código y como su situación de vida

85
00:10:09,480 --> 00:10:15,240
las cosas que le intersectan afecta como programa porque aquí igual que a la hora de hablar nadie es

86
00:10:15,240 --> 00:10:23,240
neutral hora de programar tampoco y esto a ver hay cosas como por ejemplo las sillas en las que se

87
00:10:23,240 --> 00:10:30,360
ha visto se ha hecho una charla maravillosa en la que se ha hablado de esto un ejemplo sacado de

88
00:10:30,360 --> 00:10:35,040
twitter porque tampoco tenía yo mucho tiempo para sacar aquí ejemplos un señor de la nación

89
00:10:35,040 --> 00:10:39,440
taínuide en nubia a celanda no puede utilizar el face id a pel porque le interpreta los tatuajes que

90
00:10:39,440 --> 00:10:48,160
tienen la boca como algo que le está tapando la cara esto es una cosa muy visible y dices bueno

91
00:10:48,160 --> 00:10:54,680
vale pues habrá forma de arreglarlo ya pero es que esto va un poquito más allá mi hipótesis aquí

92
00:10:54,680 --> 00:11:00,200
es que no estamos hablando solo de ellas estamos hablando de cada una de las partes que componen

93
00:11:00,200 --> 00:11:08,040
cualquier tipo de equipo de programación necesitamos igual que no utilizaríais un solo método para

94
00:11:08,040 --> 00:11:14,040
intentar devuguear algo tener a un solo tipo de persona en un equipo generalmente un hombre

95
00:11:14,040 --> 00:11:24,920
de estilo blanco es una mala praxis y se tiene que vender como tal cuál es la solución a esto

96
00:11:25,960 --> 00:11:32,200
ya sé que suena muy a mundo dar coiris pero diversidad a diversidad afectiva sexual y de

97
00:11:32,200 --> 00:11:38,920
género cuántas señoras están aquí hoy cuántas personas a la xtb cuántas específicamente personas

98
00:11:38,920 --> 00:11:44,720
trans cuántas personas racializadas cuántas personas discas cuántas personas de primera

99
00:11:44,720 --> 00:11:50,440
generación de universidad pues bueno una reflexión para que no tengáis más busies en vuestro código

100
00:11:50,440 --> 00:12:07,320
muchas gracias muy bien así me gustan los aplausos sé que estáis cansados ya que es la última hora

101
00:12:07,320 --> 00:12:13,240
pero muy bien ahora viene victor que nos va a hablar de harba esos que ha visto mi charla al

102
00:12:13,240 --> 00:12:23,160
inspirado así que nada os dejo con él un segundo y encajó este most portátil y lo habéis hecho muy

103
00:12:23,160 --> 00:12:44,600
bien en los aplausos muy bien habéis practicado y se ha notado

104
00:12:53,160 --> 00:13:02,840
muchas gracias buenas tardes tenía cada la chao en compañero para finales

105
00:13:02,840 --> 00:13:08,240
que da yo me ya hemos visto su ares y bueno pertenezco a eso que pone ahí de durango

106
00:13:08,240 --> 00:13:13,480
computer team y quería hablar un poquito de este tema que realmente no está directamente

107
00:13:13,480 --> 00:13:20,600
relacionado con python pero sí que creo que es interesante vamos a empezar por algo sencillo eso

108
00:13:20,600 --> 00:13:26,240
que es una nes muy bien y eso

109
00:13:29,040 --> 00:13:36,360
incomodé dimos un número correcto vale que tienen en común esas dos máquinas

110
00:13:36,360 --> 00:13:38,240
que son decir

111
00:13:38,240 --> 00:13:50,360
si son procesadores de ocho bits pero los ambos tienen el la mismo procesador o familia de mi

112
00:13:50,360 --> 00:13:57,240
procesador que es el 6502 es un procesador de ocho bits que se comercializó en los años

113
00:13:57,240 --> 00:14:04,240
ochenta principalmente y que hoy en día se sigue usando y es interesante el uso que tiene y es en

114
00:14:04,240 --> 00:14:11,080
los marcapasos vale a día de hoy se sigue usando pero bueno no es el objetivo de esta charla el

115
00:14:11,080 --> 00:14:16,240
objetivo de esta charla es que ocurriría si yo coge chip que yo puedo comprarlo o encontrarlo

116
00:14:16,240 --> 00:14:22,400
en el pre o en distintos propiedores no que a día de hoy se sigue comercializando y digo pues voy a

117
00:14:22,400 --> 00:14:28,520
hacer mi propio ordenador cómo se haría eso mi propio ordenador con ese chip pues eso se hace eso

118
00:14:28,520 --> 00:14:35,240
es lo que compone el proyecto durango vale el proyecto no es mío yo pertenezco al grupo que está

119
00:14:35,240 --> 00:14:41,320
ayudando pero lo ha hecho ahí tenéis al autor se llama carlos en este tema de talmería de allí

120
00:14:41,320 --> 00:14:48,640
que donde soy yo y se trata de un ordenador hecho desde cero con los chips y los cables y todo ahí

121
00:14:48,640 --> 00:14:54,080
ahora vais a ver el prototipo porque ese es el diseño digamos último que hemos estado desarrollando

122
00:14:54,080 --> 00:15:00,680
para poder tener una plaquita y poder desarrollar en él vale tiene un procesador 65 cero todos

123
00:15:00,680 --> 00:15:07,280
de 8 bits tiene 32 kilos bits no bites de ram rom tiene el otro cartucho como está más

124
00:15:07,280 --> 00:15:13,120
acostumbrado que poner el cartucho encendía y a jugar vale tiene dos modos de vídeo uno de 16

125
00:15:13,120 --> 00:15:21,640
colores otro monocromo como antiguamente y bueno pues eso es muy bonito los chise son

126
00:15:21,640 --> 00:15:26,800
muchas chise eso es el prototipo eso es durango eso esa maraña de cables es durango

127
00:15:28,080 --> 00:15:33,960
a ver que bonito lo que hayamos estado ahora que yo tengo la carrera con la prueba por decir

128
00:15:33,960 --> 00:15:40,080
por qué no funciona porque un cable de ahí se había pues encuentran ahí pero los chises son

129
00:15:40,080 --> 00:15:44,080
muy bonitos pero que hay de lo mío si somos más desarrollados dejar de go de software bueno

130
00:15:44,080 --> 00:15:51,000
pues lo primero es poder crear un ecosistema completo de para esta arquitectura es decir

131
00:15:51,000 --> 00:15:57,920
un sistema de los más mínimos vale una librería de desarrollo para que cualquiera de vosotros

132
00:15:57,920 --> 00:16:03,200
cualquiera de vosotros eso sí en c lo siento todavía no el vending en python ahora voy con eso

133
00:16:03,200 --> 00:16:11,240
con lo de python que no nos va a permitir hacer juegos para esto hacer juegos para esta arquitectura

134
00:16:12,040 --> 00:16:19,320
con pilador configuración y herramientas de desarrollo las cuales algunas las estamos

135
00:16:19,320 --> 00:16:26,680
haciendo en python y en java perdón pero tenía que decirlo y madre mía el jabero está aquí otra vez

136
00:16:26,680 --> 00:16:34,520
y para ir terminando de decir la una herramienta sobre todo para hacer toda la parte gráfica y

137
00:16:34,520 --> 00:16:39,840
gestionarla seguramente la haremos en python y un emulador que lo hemos desarrollado nosotros

138
00:16:39,840 --> 00:16:46,720
y además estamos en el siglo 21 que es mínimo que todas las herramientas la tengamos en una

139
00:16:46,720 --> 00:16:58,480
imagen docker que está subida en docker ha tanto para x86 como rm y lo puedes utilizar en una

140
00:16:58,480 --> 00:17:03,960
rapper y p información del proyecto y eso es durango ejecutando sin una tele una cerrete

141
00:17:03,960 --> 00:17:10,720
como tiene que ser ahí lo tenéis y ahí tiene información del proyecto lo que es la página

142
00:17:10,720 --> 00:17:17,400
web que está en desarrollo la vía saber va a ser la típica página hola mundo pero bueno luego

143
00:17:17,400 --> 00:17:23,240
puedo pasar la presentación no os preocupéis y la organización de guijab que podéis encontrar

144
00:17:23,240 --> 00:17:31,200
y vais a ver que todo el código es libre y con licencia open source vale lo he dicho muchísimas

145
00:17:31,200 --> 00:17:46,120
gracias por este tiempo y espero que os guste el proyecto gracias a todos

146
00:17:46,120 --> 00:18:04,640
pues a continuación mano que ya está preparadísimo ha estado paseando si toda la tarde generando

147
00:18:04,640 --> 00:18:13,480
imágenes para esta charla así que vamos a tratarle con mucho gariño y todo tu y yo no sé si esto va

148
00:18:13,480 --> 00:18:20,520
a tardar entre un minuto a 27 minutos es que como no lo he practicado se yo empezarán a hablar

149
00:18:20,520 --> 00:18:26,040
súper rápido y si sobre tiempo pues hablaré de otras cosas supongo generación de imágenes el

150
00:18:26,040 --> 00:18:34,640
futuro es ahora vale quien soy yo está mi página de guijab manu gary hasta de hecho hasta ayer que

151
00:18:34,640 --> 00:18:42,200
fue mi último día era el principal de ingenieres adultics una compañía belga y bueno ahí si

152
00:18:42,200 --> 00:18:48,120
entres ahí pues está los links a mi blog y etcétera y bueno me ha gustado lo que es la generación

153
00:18:48,120 --> 00:18:52,640
de la ingeniería artificial generativa desde hace mucho tiempo hecho un artículo que escribí en

154
00:18:52,640 --> 00:19:00,800
2015 que fue cuando se empezó a hablar de las rnn las redes neuronales recurrentes y hice un proyecto

155
00:19:00,800 --> 00:19:06,360
en el que le di unas imágenes de monet a una rnn muy simple y yo me acuerdo de flipar y esto llegó

156
00:19:06,360 --> 00:19:12,480
al front page de hacker news pero conseguía hacer imágenes que decía mira mira la he aprendido

157
00:19:12,480 --> 00:19:17,440
pues que el cielo está arriba y que hay gente abajo no yo flipando con la calidad de eso no lo que es

158
00:19:17,440 --> 00:19:24,000
la ingeniería artificial generativa básicamente el generar pues cualquier cosa generar textos generar

159
00:19:24,000 --> 00:19:30,840
imágenes generar audio de forma independiente a partir de la ingeniería artificial han pasado

160
00:19:30,840 --> 00:19:38,520
muchas cosas desde 2015 de lo más importante fue el año pasado en 2021 open ai que es de todo menos

161
00:19:38,520 --> 00:19:45,800
open abrió lanzó modelo en más o menos que no es pero bueno anunció un modelo de inteligencia

162
00:19:45,800 --> 00:19:53,520
de generación de imágenes llamada tally ese fue en 2021 este año anunció la versión 2 mucho

163
00:19:53,520 --> 00:20:01,000
mejorada mejor calidad de imágenes que hasta antes estaba en beta privada tenías que pedirles

164
00:20:01,000 --> 00:20:07,560
por favor o peña y dejando usar básicamente esto como funciona pues le pones un prompt

165
00:20:07,560 --> 00:20:14,520
una conferencia de python fotorealista foto de 50 milímetros y te hace por la foto que

166
00:20:14,520 --> 00:20:18,400
puesto al principio que nadie había pensado que estaba generada por inteligencia artificial pero

167
00:20:18,400 --> 00:20:25,560
si lo estaba y bastante chulo hace imágenes de todo lo que tipo o sea locuras no que pasa hasta

168
00:20:25,560 --> 00:20:30,720
ayer ayer anunciaron que ya estaba pasada de la beta y que ahora estaba abierto para cualquier

169
00:20:30,720 --> 00:20:36,800
persona si vas a google buscáis dale loguin veré un artículo que vale te puede registrar gratis

170
00:20:36,800 --> 00:20:42,400
te dan 50 créditos y te puede volver locos porque creo yo que la gasolidad de que lo hicieron

171
00:20:42,400 --> 00:20:50,200
ayer lleva solo como cinco meses en beta pues porque en agosto pasó algo muy gordo que es porque

172
00:20:50,200 --> 00:20:58,000
decía el futuro esta hora que es que estabilidad y anunció un modelo opensource de generación

173
00:20:58,000 --> 00:21:04,480
de imágenes llamado stable diffusion esto es del 22 de agosto vale recordad dale se abrió

174
00:21:04,480 --> 00:21:09,120
mayo de 2022 en agosto se anunció esto y esto es opensource esto significa que cualquier persona

175
00:21:09,120 --> 00:21:14,720
puede ejecutarlo en google colab en su ordenador si tienes una gp gorda puede modificarlo etcétera

176
00:21:14,720 --> 00:21:20,200
no y están pasando cosas muy gordas como bueno este modelo hace cosas chulas les crees un prompt

177
00:21:20,200 --> 00:21:25,680
te hace imágenes de cualquier estilo le puede pasar una imagen para guiar y un prompt y te genera

178
00:21:25,680 --> 00:21:30,760
la imagen de abajo vale tú dibujas en paint escribes un prompt y te sale eso yo cogido dibujos de

179
00:21:30,760 --> 00:21:38,200
mis hijos así le pasa eso y han flipado no qué pasa pasan cosas como ésta no debían estar otras

180
00:21:38,200 --> 00:21:42,840
comunidades de artistas están prohibiendo las imágenes generadas por ahí pese a que mucha

181
00:21:42,840 --> 00:21:48,040
gente no sabe cuáles son generadas por ahí hubo un concurso de estados unidos de arte en el que

182
00:21:48,040 --> 00:21:52,000
el que ganó si efectivamente fue una imagen generada por estable diffusion o por mid-journey que es un

183
00:21:52,000 --> 00:21:58,560
competidor bastante gordo no todo todo bueno pues qué más dano porque esto va a afectar al mundo

184
00:21:58,560 --> 00:22:03,640
bueno esto está afectando a los artistas están hablando de cosas como si yo genero una cosa con

185
00:22:03,640 --> 00:22:09,920
el estilo en el prompt pongo el estilo de un señor de Picasso el copyright de esa imagen que se genera

186
00:22:09,920 --> 00:22:15,520
de Picasso o no claro no estás copiando una imagen literalmente pero el estilo lo estás infundiendo

187
00:22:15,520 --> 00:22:19,520
no cosas que nadie sabe ahora mismo cómo se va a demostrar como se demuestra el estilo de una

188
00:22:19,520 --> 00:22:24,200
imagen cosas cordas pues bueno al final del mundo del arte a mí me da igual yo no soy artista

189
00:22:24,200 --> 00:22:30,840
no está pasando cosas como ésta no hubo como es un source este estable diffusion y triunbo es un

190
00:22:30,840 --> 00:22:34,800
modelo de google que también es opensource pues un señor en su casa dijo voy a combinar las dos

191
00:22:34,800 --> 00:22:40,640
cosas con lo cual significa que este modelo este modificio que se entrenó en un dataset de 5

192
00:22:40,640 --> 00:22:46,120
billones de imágenes ahora lo puedes tú y tú near con 50 imágenes tuyas y ya puedes generar

193
00:22:46,120 --> 00:22:53,400
todos los estilos y todo y hacer de fakes con tu propia imagen y esto va a ser muy gordo esto va

194
00:22:53,400 --> 00:23:01,720
a ser muy gordo y bueno me sobra mira este soy yo este tengo más un retrato esto está en un

195
00:23:01,720 --> 00:23:25,160
juego la lo podéis hacer vosotros sin pagar nada nada una pasada gracias a continuación alejandro

196
00:23:25,160 --> 00:23:32,240
viene a hablarnos de test bien es importante a una conferencia informática así que me tiene

197
00:23:32,240 --> 00:23:39,200
sorprendida vamos a escucharle y nada todo tuyo gracias bueno como podéis ver vengo súper

198
00:23:39,200 --> 00:23:44,880
preparado con una gran presentación mi nombre es alejandro soy backend en mercadona tech y

199
00:23:44,880 --> 00:23:51,840
algunos recordéis que ayer unos compañeros míos os dieron un taller sobre tdd entonces alguno de

200
00:23:51,840 --> 00:23:58,120
vosotros usa tdd en su día a día en un entorno de producción aparte vosotros dos

201
00:24:00,760 --> 00:24:04,160
poquitos poquitos empezado a usarlo os lo recomiendo

202
00:24:05,480 --> 00:24:12,520
qué pasa final usando tdd poco de los uno de los objetivos que tiene no es conseguir al final

203
00:24:12,520 --> 00:24:19,360
un código limpio mantenible reutilizable entonces durante el ciclo de tdd yo me voy a

204
00:24:19,360 --> 00:24:24,480
escribir mis test poco a poco voy escribiendo mi implementación al final tengo todos mis

205
00:24:24,480 --> 00:24:29,400
test en verde preciosos tengo una implementación muy bonita usando inyección de dependencias

206
00:24:29,400 --> 00:24:35,840
con un nombre precioso y ahí lo dejo estar no ya cojo me voy me voy a otra cosa y me olvido

207
00:24:36,720 --> 00:24:43,080
qué pasa seis meses más tarde alguien me pide que tengo que hacer una nueva implementación

208
00:24:43,080 --> 00:24:47,640
extender esa funcionalidad o cualquier otro compañero mío tiene que tocar ese código

209
00:24:47,640 --> 00:24:54,920
y dice vale al final la fuente la verdad de qué está haciendo mi código son esos test pues

210
00:24:54,920 --> 00:25:00,920
voy a irme esos test voy a leerme los voy a ver qué coño hacía esto para luego pues extenderlo

211
00:25:00,920 --> 00:25:07,560
como sea qué pasa me voy a ese primer test y de repente me veo que inicialmente para prepararme

212
00:25:07,560 --> 00:25:13,480
en estado inicial del test tengo una serie de creaciones de objetos de persistencia en base de

213
00:25:13,480 --> 00:25:20,960
datos de mocs que con la tontería de ocupación líneas eso es elegible yo no sé qué demonios está

214
00:25:20,960 --> 00:25:25,680
haciendo este test y lo peor de todos que mejor cojo me voy a mi segundo test y es exactamente

215
00:25:25,680 --> 00:25:31,160
igual que el primero pero cambian dos variables qué coño significa que esas dos variables en

216
00:25:31,160 --> 00:25:38,840
distintas del primero entonces al final lo que os quiero un poco de decir es ese mimo que nosotros

217
00:25:38,840 --> 00:25:44,200
le damos ese código de producción deberíamos dar una pensada y hacerla también a los test aunque

218
00:25:44,200 --> 00:25:52,600
sea algo tan simple como toda ese setup inicial del test sacarlo a un par de funciones que con el

219
00:25:52,600 --> 00:25:58,520
naming me den muchísimo más contexto de qué está haciendo ese test o crearme una factoría por

220
00:25:58,520 --> 00:26:06,000
ejemplo que me crea un carrito que tiene tres leches y dos panes y yo las alfactoría al sujeto

221
00:26:06,000 --> 00:26:11,200
le llamo pepito entonces ya dentro del contexto de mi equipo mis compañeros todos sabemos que

222
00:26:11,200 --> 00:26:16,360
pepito es un carrito con tres leches y dos panes y allá donde lo vea yo ya tengo muy claro lo que es

223
00:26:16,360 --> 00:26:22,560
o si por ejemplo necesito la creación de objetos en la forma más dinámica puede usar patrones

224
00:26:22,560 --> 00:26:28,280
como el builder para ir generándome según lo necesite objetos con las propiedades que yo quiera

225
00:26:28,280 --> 00:26:34,720
o la combinación que queráis de los patrones y estoy seguro que hay mil que no conozco entonces

226
00:26:34,720 --> 00:26:42,000
un poco la moraleja es tratar los códigos el test no como un ciudadano de segunda sino

227
00:26:42,000 --> 00:26:46,280
dándole al final la misma relevancia que vuestro código de producción porque el día de mañana

228
00:26:46,280 --> 00:26:52,600
os fatilitrarán muchísimo la vida a la hora de entender qué está pasando y cómo extender esa

229
00:26:52,600 --> 00:27:06,240
esa ese código gracias que te quitamos el sitio

230
00:27:06,240 --> 00:27:24,600
también usb ya nos queda poquito el siguiente es javi que nos va a hablar de datas o sin

231
00:27:24,600 --> 00:27:38,600
lo tienes todo listo está creando hype es eso

232
00:27:38,600 --> 00:27:51,520
bueno soy muy mal haciendo presentaciones usan que es un fiche de texto bueno soy

233
00:27:57,200 --> 00:28:05,280
soy javier domingo trabajo en mi handel es chomón en todos los sitios que conozco

234
00:28:05,280 --> 00:28:13,200
bueno soy software ingeniergo en realidad soy teleco pero acabé haciendo esto hago data

235
00:28:13,200 --> 00:28:19,360
infrastructure realmente hago de todo pero eso es normalmente lo que me di ultimamente trabajo en

236
00:28:19,360 --> 00:28:25,160
triple y la razón por la que está hablando de triple es porque nosotros hacemos una cosa que

237
00:28:25,160 --> 00:28:32,480
es pillamos hacemos acuerdos con bancos nos mandan todas sus transacciones y luego dependiendo de lo

238
00:28:32,480 --> 00:28:39,600
que sean de esas transacciones pues hacemos cosas en este caso tenemos rewards y en ritmo que

239
00:28:39,600 --> 00:28:46,240
básicamente significa hacemos como lo y altiprogram para transacciones eso significa que si perdemos

240
00:28:46,240 --> 00:28:53,160
una transacción se lia entonces yo vengo a hablar de la parte de data de todo eso entonces bueno

241
00:28:53,160 --> 00:29:03,400
aquí explico un poquito pues requerimientos que tenemos de escalabilidad y tal y la idea es hay

242
00:29:03,400 --> 00:29:10,440
dos servicios en el que uno depende del otro primero es saber esta transacción es de algo y

243
00:29:10,440 --> 00:29:16,840
luego es ese algo tenemos configurado que tiene que dar un cashback de 10 por ciento

244
00:29:16,840 --> 00:29:23,640
algo así vale entonces tenemos varias cosas pero una de las cosas que da más

245
00:29:24,640 --> 00:29:33,360
requerimientos o sube el nivel es el tener soporte para realtar como sé que todos podéis imaginaros

246
00:29:33,360 --> 00:29:44,560
cómo se ve este secuencia esto se puede ver aquí esto es lo que pasa cuando les hace un

247
00:29:44,560 --> 00:29:52,200
viaje en taxi entonces tú dices quiero hacer este viaje en taxi entonces la compañía de taxis con su

248
00:29:52,200 --> 00:30:02,480
app coge va a donde visa mastercard tu tarjeta les dice yo quiero bloquear 20 euros entonces ellos

249
00:30:02,480 --> 00:30:09,560
van al banco y el banco dice sí tiene 20 euros entonces en este caso a nosotros nos mandaría

250
00:30:09,560 --> 00:30:19,760
este usuario va a usar 20 euros nosotros le decimos esto es habitat si y entonces ellos le mandan

251
00:30:19,760 --> 00:30:25,520
una notificación al usuario de que sepas que habitat si te está haciendo cobrar 20 euros y

252
00:30:25,520 --> 00:30:32,600
entonces también autorizan la rica es de 20 euros y se lo dicen a mastercard mastercard se lo

253
00:30:32,600 --> 00:30:37,200
dice a la aplicación de taxi la aplicación de taxi dice bien tienes dinero te dejamos montar en

254
00:30:37,200 --> 00:30:49,320
taxi entonces tú te montas en taxi y cuando acaba el viaje en taxi lo que pasa es que bueno no te

255
00:30:49,320 --> 00:30:57,200
has gastado exactamente 20 euros entonces la aplicación taxi lo que hace es decirnos bueno le hice

256
00:30:57,200 --> 00:31:05,400
al a mastercard o visa o lo que sea bueno que quiero coger sólo 17 con 90 nosotros cogemos bueno

257
00:31:05,400 --> 00:31:09,920
antes también hemos hecho una cosa que es una vez nos ha llegado que has gastado 20 euros como hemos

258
00:31:09,920 --> 00:31:14,800
detectado que habitat si tiene 10% de cashback pues le decimos al banco que sepas que tu usuario ha

259
00:31:14,800 --> 00:31:22,640
ganado dos euros con esto luego hacen lo que quieran con ello y bueno pues es la autorización nos

260
00:31:22,640 --> 00:31:30,640
llega y nosotros actualizamos y luego decides darle un tipo al taxi entonces se vuelve a poner y la

261
00:31:30,640 --> 00:31:36,200
idea es que al final tenemos una serie de transacciones que para lo que para vosotros es un pago acabamos

262
00:31:36,200 --> 00:31:43,360
teniendo como nos de tres cuatro cinco interacciones de modificando el mismo pago el problema de todo

263
00:31:43,360 --> 00:31:49,760
esto es que nosotros al final del día tenemos que asegurarnos que 100% el dinero que se está

264
00:31:49,760 --> 00:31:55,240
dando y el dinero que se refleja en la base datos es el del pago de exactamente cuánto se te acobron

265
00:31:55,240 --> 00:32:05,160
entonces para conseguir que tengamos un sistema que es escalable lo que hemos hecho ha sido dividir

266
00:32:05,160 --> 00:32:13,320
esto es segregar escritura de lectura esto no voy a dar una explicación pero la idea es que en la

267
00:32:13,320 --> 00:32:20,440
API lo único que haces es leer de la base datos y después empiezas a mandar todos eventos uno

268
00:32:20,440 --> 00:32:27,160
tras otro diciendo las acciones que han pasado y luego empiezas metes todo en popsup

269
00:32:27,160 --> 00:32:51,760
bueno no me da tiempo pero ahí está bien muchas gracias

270
00:32:57,920 --> 00:33:03,000
pues ahora manolo nos va a hablar de cómo desplegar en data breaks

271
00:33:03,000 --> 00:33:06,240
botanamos todo listo preparado

272
00:33:10,600 --> 00:33:12,000
también está creando hay

273
00:33:15,080 --> 00:33:18,200
me gusta mucho tu fondo lo hecho dale por casualidad

274
00:33:18,200 --> 00:33:20,600
perdón nada si perdona

275
00:33:20,600 --> 00:33:27,720
ahora todo

276
00:33:27,720 --> 00:33:37,320
y

277
00:33:44,680 --> 00:33:53,640
hola buenas yo soy Manuel Martín llevo cinco años trabajando como data scientist y bueno un

278
00:33:53,640 --> 00:34:02,280
una plataforma que llevo usando hace mucho tiempo y que con la que se lo hemos trabajado es data

279
00:34:02,280 --> 00:34:08,120
breaks y no sé si aquí la gran mayoría de la gente conoce esta plataforma quien ha trabajado

280
00:34:08,120 --> 00:34:17,120
con data breaks y quien ha desplegado jobs pipelines etcétera con data breaks y qué tal ha sido

281
00:34:17,120 --> 00:34:27,120
un engorroso engorroso un poco pues yo vengo aquí a presentar de bx

282
00:34:28,480 --> 00:34:33,200
bueno antes de nada para los que no conozcan data breaks data breaks es una plataforma clau

283
00:34:33,200 --> 00:34:39,800
hecha por espar bueno por la gente que ha hecho espar y bueno pues podemos entender que todo el

284
00:34:39,800 --> 00:34:45,920
ecosistema etcétera que suelen utilizar pues es en relación a esta tecnología no es par en el flow

285
00:34:45,920 --> 00:34:48,720
del tal y todo este está

286
00:34:51,720 --> 00:34:59,960
vale tenía pensado montar una un template vale que se basa en esta librería que es de bx que

287
00:34:59,960 --> 00:35:06,480
le han hecho ellos mismos y que la verdad que está bastante escondidilla de hecho si vos

288
00:35:06,480 --> 00:35:13,280
cae por google cómo desplegar un job de data breaks por ejemplo la primera que desale si

289
00:35:13,280 --> 00:35:20,080
si que mirando la siguiente pues cada una de una forma bastante distinta y curiosamente en la que

290
00:35:20,080 --> 00:35:25,520
te sale en la que yo voy a implementar pero con muchísimos menos pasos de la que ellos te ofrecen

291
00:35:25,520 --> 00:35:35,920
no primero pues te con te paquetiza en un wheel la la aplicación te la copia en el sistema de

292
00:35:35,920 --> 00:35:45,960
archivo de data breaks de fines un json con el yo hay poder poner tu dependencia etcétera y

293
00:35:45,960 --> 00:35:53,520
finalmente utilizan la ipi de data breaks pues para publicar ese ese yo basado en ese en ese json

294
00:35:55,760 --> 00:36:02,360
sin embargo hay una forma bastante más sencilla que he encontrado que utilizando esa esa esa

295
00:36:02,360 --> 00:36:08,640
librería que al final es una cli que te va a permitir de una forma muy sencilla desplegar un

296
00:36:08,640 --> 00:36:18,520
una aplicación entonces aquí tenéis la url del repositorio y veamos qué contiene bueno en mi

297
00:36:18,520 --> 00:36:24,560
caso pues yo utilizo para para las dependencias el archivo de condas que realmente lo único que

298
00:36:24,560 --> 00:36:38,640
importa aquí pues es esa esa dependencia del data breaks cli y la del dbx habré que configurar

299
00:36:38,640 --> 00:36:45,760
pues tu tu data breaks para tener un personal token que eso bueno lo podéis buscar en google también

300
00:36:45,760 --> 00:36:54,480
la la cli de data breaks crear un proyecto de paio paide de x aquí se me ha colado una op que básicamente

301
00:36:54,480 --> 00:37:01,480
lo que te va a crear es un este json en el que voy a poner ahí mis diferentes artefactos

302
00:37:02,960 --> 00:37:07,440
que esos ese directorio son los que se van a encontrar en el sistema de archivo de data breaks

303
00:37:07,440 --> 00:37:15,320
y ahí donde pues va a hacer ese ejercicio que veíamos antes de paquetizar en la librería subirla

304
00:37:15,320 --> 00:37:21,240
a un repositorio pues todo eso se va a encontrar en este en estos en estos sitios

305
00:37:23,600 --> 00:37:28,760
y bueno pues finalmente podremos llegar a utilizar esta este comando

306
00:37:30,280 --> 00:37:37,400
que tengo por aquí y básicamente si fuéramos y miraramos los logs que

307
00:37:38,560 --> 00:37:44,200
que ahora va a escupir pues básicamente veríamos ese mismo proceso lo que pasa que está bastante

308
00:37:44,200 --> 00:37:51,480
más controlado no te tiene que crear tu propio gráper ni ni ya hacer llamadas a la a la pie etcétera no

309
00:37:54,400 --> 00:38:00,820
básicamente el archivo que le envía va a tener una apariencia muy parecida al al final que te

310
00:38:00,820 --> 00:38:05,600
puede ofrecer la propia documentación de otra bricks pero básicamente pues añades ciertos

311
00:38:05,600 --> 00:38:14,440
ciertos parámetros como puede ser pues el propio site del cluster variables de entorno

312
00:38:14,440 --> 00:38:25,440
librerías específicas para ese para ese para ese paquete etcétera y bueno si lo veis pues aquí

313
00:38:25,440 --> 00:38:30,680
tendríamos el job que se ha creado con simplemente un comando

314
00:38:30,680 --> 00:38:39,200
bueno si habéis copiado el link del repositorio pues podéis utilizar este template para cuando

315
00:38:39,200 --> 00:38:41,960
necesitáis depliego una aplicación de python

316
00:38:41,960 --> 00:39:01,320
y ahora viene la conví a hablarnos en una conferencia super guay super diferente la paella más

317
00:39:03,360 --> 00:39:09,720
y enseguidís la deja ella está atentos porque de verdad que es muy chula es una idea diferente y muy muy

318
00:39:09,720 --> 00:39:14,600
guay

319
00:39:34,040 --> 00:39:36,120
hola

320
00:39:36,120 --> 00:39:38,120
Mi nombre es Chek.

321
00:39:40,120 --> 00:39:46,120
Esta es mi primera vez en PiconS.

322
00:39:48,120 --> 00:39:51,120
Estoy feliz y los disfruto.

323
00:39:53,120 --> 00:39:56,120
Aprendí español para PiconS.

324
00:39:56,120 --> 00:40:03,120
Es de dos veces.

325
00:40:06,120 --> 00:40:11,120
Hablo un poco de español y no muy bien,

326
00:40:12,120 --> 00:40:17,120
pero quiero desdese.

327
00:40:17,120 --> 00:40:26,120
La SIEP VEDA VANDANA postula ahora.

328
00:40:27,120 --> 00:40:28,120
¡Prompa por!

329
00:40:31,120 --> 00:40:35,120
Aceptamos chelas en inglés.

330
00:40:36,120 --> 00:40:41,120
Necesitamos chelas en español para Pajamascon.

331
00:40:41,120 --> 00:40:49,120
Gracias.

332
00:40:54,120 --> 00:40:57,120
Ahora viene un señor muy poco conocido.

333
00:40:57,120 --> 00:40:59,120
Se llama Pablo.

334
00:40:59,120 --> 00:41:00,120
Es ponentes.

335
00:41:00,120 --> 00:41:02,120
Está saltando una norma que hemos puesto.

336
00:41:02,120 --> 00:41:04,120
Pero teníamos un huequito y hemos dicho,

337
00:41:04,120 --> 00:41:06,120
bueno, venga, vale.

338
00:41:06,120 --> 00:41:08,120
Solo sí rapidillo.

339
00:41:08,120 --> 00:41:11,120
Así que nada, si es rápido, le dejamos y no le echamos.

340
00:41:11,120 --> 00:41:13,120
Todo tuyo, Pablo.

341
00:41:19,120 --> 00:41:21,120
Los dioses de las presentaciones no se...

342
00:41:21,120 --> 00:41:23,120
¿Qué pasa ahí?

343
00:41:30,120 --> 00:41:32,120
Un poquito ahí.

344
00:41:34,120 --> 00:41:35,120
Hola.

345
00:41:35,120 --> 00:41:38,120
Bueno, ¿cómo estamos? Ya es la última.

346
00:41:38,120 --> 00:41:40,120
Ya no queda nada. ¿Cómo está la Picon por ahora?

347
00:41:40,120 --> 00:41:43,120
¡Adope!

348
00:41:44,120 --> 00:41:46,120
Gracias.

349
00:41:46,120 --> 00:41:50,120
Muchos me conoceréis por mi trabajo en el intérprete de País Sonia en el Core,

350
00:41:50,120 --> 00:41:52,120
pero esta charla no va de eso.

351
00:41:52,120 --> 00:41:54,120
Qué pena.

352
00:41:54,120 --> 00:41:56,120
Esta charla, de hecho, se spam.

353
00:41:56,120 --> 00:41:59,120
Porque en mi trabajo, aparte de trabajar haciendo el lenguaje en sí,

354
00:41:59,120 --> 00:42:01,120
hacemos un montón de herramientas.

355
00:42:01,120 --> 00:42:05,120
Y dado que la empresa para la que trabajo me ha pagado por venir aquí,

356
00:42:05,120 --> 00:42:09,120
habrá que enseñar unas cosas que hago aquí para que cuente para algo, supongo.

357
00:42:09,120 --> 00:42:13,120
Bueno, os voy a presentar una cosa que hacemos,

358
00:42:13,120 --> 00:42:15,120
que de hecho, eso a Pensors, lo podéis descubrir por ahí,

359
00:42:15,120 --> 00:42:18,120
y podéis ver cómo trabajamos, que es un profiler de memoria.

360
00:42:18,120 --> 00:42:21,120
Se llama Mem Ray y tiene este logo tohuapo, así como de manga.

361
00:42:21,120 --> 00:42:24,120
¡Ja! Es un dragón serpiente.

362
00:42:24,120 --> 00:42:27,120
Bueno, Mem Ray es un profiler de memoria.

363
00:42:27,120 --> 00:42:30,120
Eso que es... pues imagínate ahora mismo,

364
00:42:30,120 --> 00:42:32,120
porque hoy en día hay con muchos datos,

365
00:42:32,120 --> 00:42:35,120
hay con muchas charlas de datos y machine learning movidas,

366
00:42:35,120 --> 00:42:37,120
y estas cosas consumen mucha memoria,

367
00:42:37,120 --> 00:42:40,120
y es muy fácil llegar con tu portátil de mierda de 8 gigas de RAM

368
00:42:40,120 --> 00:42:42,120
y que tu programa explote.

369
00:42:42,120 --> 00:42:44,120
Y entonces dices, ¿y por qué?

370
00:42:44,120 --> 00:42:46,120
Pues esta cosa te dice por qué.

371
00:42:46,120 --> 00:42:49,120
Pero dirás, pero Pablo, en la librería estándar,

372
00:42:49,120 --> 00:42:52,120
hay un profiler de memoria que se llama Trismalock que has hecho tú.

373
00:42:52,120 --> 00:42:54,120
Sí, bueno, es verdad.

374
00:42:54,120 --> 00:42:58,120
Pero... pero un momento, pero un momento.

375
00:42:58,120 --> 00:43:00,120
Espera, espera, espera, que el salto tengo 5 minutos.

376
00:43:00,120 --> 00:43:03,120
Pero ¿qué pasa? No ve todo, solo ve lo que pasa en país.

377
00:43:03,120 --> 00:43:06,120
Por ejemplo, en este cacho, pues aquí estoy usando,

378
00:43:06,120 --> 00:43:09,120
estoy usando esta llamada sistema para pedirle al sistema operativo,

379
00:43:09,120 --> 00:43:13,120
al santo sistema operativo, pues yo que sé, creo que son 10 megas o algo así,

380
00:43:13,120 --> 00:43:16,120
y le dices, ¿oye cuánto le he pedido de memoria?

381
00:43:16,120 --> 00:43:19,120
Y te dice, 80 bytes. En fin.

382
00:43:19,120 --> 00:43:22,120
Pero si usas Mem Ray, te dice esto.

383
00:43:22,120 --> 00:43:25,120
¿Por qué es mejor? Porque tiene emojis, claro que sí.

384
00:43:25,120 --> 00:43:28,120
Bueno, no es solo eso, sino que además te dice que efectivamente

385
00:43:28,120 --> 00:43:31,120
había 9,5 megas y que estás usando Mem Map.

386
00:43:31,120 --> 00:43:34,120
Todo guapo eso, y está mejor que 8.

387
00:43:34,120 --> 00:43:36,120
8 es mentira.

388
00:43:36,120 --> 00:43:39,120
Otra cosa que está muy bien, que lo hace distinto a otros profilers,

389
00:43:39,120 --> 00:43:42,120
es que si tú dices, bueno, pero yo te doy aquí unos arrays de numpy,

390
00:43:42,120 --> 00:43:45,120
todo guapo, ¿dónde se está usando memoria?

391
00:43:45,120 --> 00:43:48,120
Y un profiler normal te dirá, bueno, pues aquí,

392
00:43:48,120 --> 00:43:51,120
estás aquí haciendo esta movida matemática súper complicada,

393
00:43:51,120 --> 00:43:53,120
con J,

394
00:43:53,120 --> 00:43:56,120
y ahí se está consumiendo una cantidad loquísima de memoria.

395
00:43:56,120 --> 00:43:59,120
Pero tú quieres una persona muy importante

396
00:43:59,120 --> 00:44:02,120
y que usas C y dices más más, dices, bueno, pero ¿qué está pasando debajo?

397
00:44:02,120 --> 00:44:05,120
Pues un profiler no te lo dice, pero membre te dice,

398
00:44:05,120 --> 00:44:08,120
toma ya aquí todo este código en C to fail,

399
00:44:08,120 --> 00:44:11,120
pues aquí están pasando cosas. ¿Qué cosas?

400
00:44:11,120 --> 00:44:14,120
Pues eso es tu problema, pero el profiler te dice

401
00:44:14,120 --> 00:44:16,120
que pasan cosas.

402
00:44:16,120 --> 00:44:18,120
Pero bueno, esto suena muy complicado,

403
00:44:18,120 --> 00:44:20,120
entonces decir, pero ¿qué más tiene?

404
00:44:20,120 --> 00:44:23,120
Otra cosa guay que hacemos es que en vez de crear un reporte en particular,

405
00:44:23,120 --> 00:44:26,120
metemos toda la información en un archivo muy gordo

406
00:44:26,120 --> 00:44:29,120
y luego generamos un montón de reportes distintos,

407
00:44:29,120 --> 00:44:32,120
algunos de ellos incluso se mueven.

408
00:44:32,120 --> 00:44:36,120
Por ejemplo, aquí te deja ver en tiempo real

409
00:44:36,120 --> 00:44:39,120
lo que hace tu aplicación y según las funciones van comiendo memoria

410
00:44:39,120 --> 00:44:42,120
y vas viendo en tiempo real que aplicación come más o menos.

411
00:44:42,120 --> 00:44:45,120
Todo guapo, la gente le encantan las cosas que se mueven,

412
00:44:45,120 --> 00:44:48,120
pues aquí hay algunas.

413
00:44:48,120 --> 00:44:51,120
Otra cosa muy guay es que puedo usarlo como un context manager

414
00:44:51,120 --> 00:44:55,120
y decir, oye, profimileame este cacho de código

415
00:44:55,120 --> 00:44:58,120
y no pagas por nada más, el profiler solo se activa en ese cachito

416
00:44:58,120 --> 00:45:01,120
y te dice lo que ese cacho consume, muy fácil.

417
00:45:01,120 --> 00:45:04,120
Pero si esto te parece muy complicado, porque es como Rocket Science,

418
00:45:04,120 --> 00:45:08,120
pues tenemos también un plugin de PiTest que tú lo enganchas a PiTest,

419
00:45:08,120 --> 00:45:11,120
no haces nada, muy fácil, hacer nada es muy fácil.

420
00:45:11,120 --> 00:45:15,120
Entonces, al final de tu PiTest te dice,

421
00:45:15,120 --> 00:45:18,120
oye, colega, estas funciones son las que más están consumiendo,

422
00:45:18,120 --> 00:45:22,120
a trabajar y pues trabajas.

423
00:45:22,120 --> 00:45:25,120
Pero si esto todavía te parece mucho más complicado,

424
00:45:25,120 --> 00:45:28,120
pues puedes coger y decorar tu test y te dices,

425
00:45:28,120 --> 00:45:30,120
oye, este test no puede usar más de 24 megas

426
00:45:30,120 --> 00:45:33,120
y si tu test usa más de 24 megas, falla.

427
00:45:33,120 --> 00:45:35,120
Está guay eso.

428
00:45:35,120 --> 00:45:37,120
Bueno, pues nada, aquí hay cosas que más se mueven,

429
00:45:37,120 --> 00:45:39,120
hay unos cuantos bullet points que no voy a leer

430
00:45:39,120 --> 00:45:41,120
y pues nada, va a usar Membray.

431
00:45:41,120 --> 00:45:46,120
¡Gracias!

